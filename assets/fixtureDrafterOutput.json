{
  "element": "parseResult",
  "content": [
    {
      "element": "category",
      "meta": {
        "classes": [
          "api"
        ],
        "title": "Hetzner Cloud API"
      },
      "attributes": {
        "meta": [
          {
            "element": "member",
            "meta": {
              "classes": [
                "user"
              ]
            },
            "content": {
              "key": {
                "element": "string",
                "content": "FORMAT"
              },
              "value": {
                "element": "string",
                "content": "1A"
              }
            }
          },
          {
            "element": "member",
            "meta": {
              "classes": [
                "user"
              ]
            },
            "content": {
              "key": {
                "element": "string",
                "content": "HOST"
              },
              "value": {
                "element": "string",
                "content": "https://api.hetzner.cloud/v1"
              }
            }
          }
        ]
      },
      "content": [
        {
          "element": "copy",
          "content": "This is the official API documentation for the Public Hetzner Cloud."
        },
        {
          "element": "category",
          "meta": {
            "classes": [
              "resourceGroup"
            ],
            "title": "Overview"
          },
          "content": [
            {
              "element": "resource",
              "meta": {
                "title": "Overview"
              },
              "attributes": {
                "href": "/"
              },
              "content": [
                {
                  "element": "transition",
                  "meta": {
                    "title": "Introduction"
                  },
                  "attributes": {
                    "href": "/overview/intro"
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "The Hetzner Cloud API operates over HTTPS and uses JSON as its data format. The API is a RESTful\nAPI and utilizes HTTP methods and HTTP status codes to specify requests and responses.\n\nAs an alternative to working directly with our API you may also consider to use:\n\n* Our CLI program [hcloud](https://github.com/hetznercloud/cli)\n\n* Our [library for Go](https://github.com/hetznercloud/hcloud-go)\n\nAlso you can find a [list of libraries, tools, and integrations on GitHub.](https://github.com/hetznercloud/awesome-hcloud)\n\nIf you are developing integrations based on our API and your product is Open Source you may be eligible for a free one time €50 (excl. VAT) credit on your account. Please contact us via the the support page on your Cloud Console and let us know the following:\n\n* The type of integration you would like to develop\n\n* Link to the GitHub repo you will use for the project\n\n* Link to some other Open Source work you have already done (if you have done so)"
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "204",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/dummy"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Getting Started"
                  },
                  "attributes": {
                    "href": "/overview/gettingstarted"
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": ">#### Example: Getting Started Request\n```bash\ncurl -H \"Authorization: Bearer jEheVytlAoFl7F8MqUQ7jAo2hOXASztX\" \\\n    https://api.hetzner.cloud/v1/servers\n```\n\n>#### Example: Getting Started Response\n```json\n{\n    \"servers\": [],\n    \"meta\": {\n        \"pagination\": {\n            \"page\": 1,\n            \"per_page\": 25,\n            \"previous_page\": null,\n            \"next_page\": null,\n            \"last_page\": 1,\n            \"total_entries\": 0\n        }\n    }\n}\n```\n\nTo get started using the API you first need an API token. Sign in into the\n[Hetzner Cloud Console](https://console.hetzner.cloud/) choose a project, go to `Access` → `Tokens`, and create a new token. Make\nsure to copy the token because it won’t be shown to you again.\nA token is bound to a project, to interact with the API of another project you have to create a new token inside the project.\nLet’s say your new token is `jEheVytlAoFl7F8MqUQ7jAo2hOXASztX`.\n\nYou’re now ready to do your first request against the API. To get a list\nof all servers in your project, issue the example request on the right side using [curl](https://curl.haxx.se/).\n\nMake sure to replace the token in the example command with the token you have\njust created. Since your project probably does not contain any servers yet,\nthe example response will look like the response on the right side.\nWe will almost always provide a resource root like `servers` inside the example response.\nA response can also contain a `meta` object with information like [Pagination](#overview-pagination)."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "204",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/dummy"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Authentication"
                  },
                  "attributes": {
                    "href": "/overview/auth"
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": ">#### Example: Authorization header\n```bash\nAuthorization: Bearer LRK9DAWQ1ZAEFSrCNEEzLCUwhYX1U3g7wMg4dTlkkDC96fyDuyJ39nVbVjCKSDfj\n```\n\nAll requests to the Hetzner Cloud API must be authenticated via a API token. Include your\nsecret API token in every request you send to the API with the `Authorization` HTTP header.\n\n```\nAuthorization: Bearer <token>\n```\n\nTo create a new API token for your project, switch into the [Hetzner Cloud Console](https://console.hetzner.cloud/) choose a project, go to `Access` → `Tokens`, and create a new token."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "204",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/dummy"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Errors"
                  },
                  "attributes": {
                    "href": "/overview/errors"
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": ">#### Example: Error response\n```json\n{\n  \"error\": {\n    \"code\": \"invalid_input\",\n    \"message\": \"invalid input in field 'broken_field': is too long\",\n    \"details\": {\n      \"fields\": [\n        {\n          \"name\": \"broken_field\",\n          \"messages\": [\"is too long\"]\n        }\n      ]\n    }\n  }\n}\n```\n\nErrors are indicated by HTTP status codes. Further, the response of the\nrequest which generated the error contains an error code, an error message, and,\noptionally, error details. The schema of the error details object depends on\nthe error code.\n\nThe error response contains the following keys:\n\n| Key       | Meaning                                                               |\n|-----------|-----------------------------------------------------------------------|\n| `code`    | Short string indicating the type of error (machine-parsable)          |\n| `message` | Textual description on what has gone wrong                            |\n| `details` | An object providing for details on the error (schema depends on code) |\n\n### Error Codes\n\n| Code                      | Description                                                                                                    |\n|---------------------------|----------------------------------------------------------------------------------------------------------------|\n| `forbidden`               | Insufficient permissions for this request                                                                      |\n| `invalid_input`           | Error while parsing or processing the input                                                                    |\n| `json_error`              | Invalid JSON input in your request                                                                             |\n| `locked`                  | The item you are trying to access is locked (there is already an action running)                               |\n| `not_found`               | Entity not found                                                                                               |\n| `rate_limit_exceeded`     | Error when sending too many requests                                                                           |\n| `resource_limit_exceeded` | Error when exceeding the maximum quantity of a resource for an account                                         |\n| `resource_unavailable`    | The requested resource is currently unavailable                                                                |\n| `service_error`           | Error within a service                                                                                         |\n| `uniqueness_error`        | One or more of the objects fields must be unique                                                               |\n| `protected`               | The action you are trying to start is protected for this resource                                              |\n| `maintenance`             | Cannot perform operation due to maintenance                                                                    |\n\n### Error Details\n\n**invalid_input**\n\n```json\n{\n  \"error\": {\n    \"code\": \"invalid_input\",\n    \"message\": \"invalid input in field 'broken_field': is too long\",\n    \"details\": {\n      \"fields\": [\n        {\n          \"name\": \"broken_field\",\n          \"messages\": [\"is too long\"]\n        }\n      ]\n    }\n  }\n}\n```\n\n**uniqueness_error**\n\n```json\n{\n  \"error\": {\n    \"code\": \"uniqueness_error\",\n    \"message\": \"SSH key with the same fingerprint already exists\",\n    \"details\": {\n      \"fields\": [\n        {\n          \"name\": \"public_key\"\n        }\n      ]\n    }\n  }\n}\n```\n\n**resource_limit_exceeded**\n\n```json\n{\n  \"error\": {\n    \"code\": \"resource_limit_exceeded\",\n    \"message\": \"project limit exceeded\",\n    \"details\": {\n      \"limits\": [\n        {\n          \"name\": \"project_limit\"\n        }\n      ]\n    }\n  }\n}\n```"
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "204",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/dummy"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Pagination"
                  },
                  "attributes": {
                    "href": "/overview/pagination"
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Responses which return multiple items support pagination. If they do support pagination,\nit can be controlled with following query string parameters:\n\n* A `page` parameter specifies the page to fetch. The number of the first page is 1.\n\n* A `per_page` parameter specifies the number of items returned per page. The default\n  value is 25, the maximum value is 50 except otherwise specified in the documentation.\n\n>#### Example: Pagination Link header\n```bash\nLink: <https://api.hetzner.cloud/actions?page=2&per_page=5>; rel=\"prev\",\n      <https://api.hetzner.cloud/actions?page=4&per_page=5>; rel=\"next\",\n      <https://api.hetzner.cloud/actions?page=6&per_page=5>; rel=\"last\"\n```\n\n>Line breaks have been added for display purposes only and responses may only contain\n>some of the above `rel` values.\n\nResponses contain a `Link` header with pagination information.\n\nAdditionally, if the response body is JSON and the root object is an object, that object\nhas a `pagination` object inside the `meta` object with pagination information:\n\n```json\n{\n    \"servers\": [...],\n    \"meta\": {\n        \"pagination\": {\n            \"page\": 2,\n            \"per_page\": 25,\n            \"previous_page\": 1,\n            \"next_page\": 3,\n            \"last_page\": 4,\n            \"total_entries\": 100\n        }\n    }\n}\n```\n\nThe keys `previous_page`, `next_page`, `last_page`, and `total_entries` may be `null` when\non the first page, last page, or when the total number of entries is unknown."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "204",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/dummy"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Sorting"
                  },
                  "attributes": {
                    "href": "/overview/sorting"
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": ">#### Example: Sorting\n```bash\nhttps://api.hetzner.cloud/actions?sort=status\nhttps://api.hetzner.cloud/actions?sort=status:asc\nhttps://api.hetzner.cloud/actions?sort=status:desc\nhttps://api.hetzner.cloud/actions?sort=status:asc&sort=command:desc\n```\n\nSome responses which return multiple items support sorting. If they do support\nsorting the documentation states which fields can be used for sorting. You\nspecify sorting with the `sort` query string parameter. You can sort by\nmultiple fields. You can set the sort direction by appending `:asc` or `:desc`\nto the field name. By default, ascending sorting is used."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "204",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/dummy"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Rate Limiting"
                  },
                  "attributes": {
                    "href": "/overview/ratelimit"
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "All requests, whether they are authenticated or not, are subject to rate\nlimiting. If you have reached your limit, your requests will be handled with\na `429 Too Many Requests` error. Burst requests are allowed. Responses contain\nserveral headers which provide information about your current rate limit status.\n\n*  The `RateLimit-Limit` header contains the total number of requests you\n   can perform per hour.\n\n*  The `RateLimit-Remaining` header contains the number of requests remaining\n   in the current rate limit time frame.\n\n*  The `RateLimit-Reset` header contains a UNIX timestamp of the point in time\n   when your rate limit will have recovered and you will have the full number\n   of requests available again.\n\nThe default limit is 3600 requests per hour and per project. The number of remaining\nrequests increases gradually. For example, when your limit is 3600 requests per hour,\nthe number of remaining requests will increase by 1 every second."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "204",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/dummy"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Labels"
                  },
                  "attributes": {
                    "href": "/overview/labels"
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Labels are `key/value` pairs that can be attached to servers, Floating IPs, SSH keys, and images.\n\nValid label keys have two segments: an optional prefix and name, separated by a slash (`/`).\nThe name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between. The prefix is optional.\nIf specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (`.`), not longer than 253 characters in total, followed by a slash (`/`).\n\nValid label values must be 63 characters or less and must be empty or begin and end with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.\n\nThe `hetzner.cloud/` prefix is reserved and cannot be used.\n\n### Examples\n\n* `environment=development`\n\n* `service=backend`\n\n* `example.com/my=label`\n\n* `just-a-key=`"
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "204",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/dummy"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Label Selector"
                  },
                  "attributes": {
                    "href": "/overview/label_selector"
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "For resources with labels, you can filter resources by their labels using the\nlabel selector query language.\n\n| Expression           | Meaning                                                             |\n|----------------------|---------------------------------------------------------------------|\n| ``k==v`` / ``k=v``   | Value of key `k` does equal value `v`                               |\n| ``k!=v``             | Value of key `k` does not equal value `v`                           |\n| `k`                  | Key `k` is present                                                  |\n| `!k`                 | Key `k` is not present                                              |\n| `k in (v1,v2,v3)`    | Value of key `k` is `v1`, `v2`, or `v3`                             |\n| `k notin (v1,v2,v3)` | Value of key `k` is neither `v1`, nor `v2`, nor `v3`                |\n| ``k1==v,!k2``        | Value of key `k1` is `v` and key `k2` is not present                |\n\n### Examples\n\n* Returns all resources that have a `env=production` label and that don’t have a `type=database` label:\n\n    `env=production,type=!database`\n\n* Returns all resources that have a `env=testing` or `env=staging` label:\n\n    `env in (testing,staging)`\n\n* Returns all resources that don’t have a `type` label:\n\n    `!type`"
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "204",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/dummy"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Changelog"
                  },
                  "attributes": {
                    "href": "/overview/changelog"
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "You can find our changelog on our [Developer Hub](https://developers.hetzner.com/cloud/changelog/?id=backend)."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "204",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/dummy"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "element": "category",
          "meta": {
            "classes": [
              "resourceGroup"
            ],
            "title": "Resources"
          },
          "content": [
            {
              "element": "resource",
              "meta": {
                "title": "Actions"
              },
              "attributes": {
                "href": "/actions"
              },
              "content": [
                {
                  "element": "copy",
                  "content": "Actions show the results and progress of asynchronous requests to the API."
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "List all Actions"
                  },
                  "attributes": {
                    "href": "/actions{?status,sort}",
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": "Can be used multiple times. Response will have only actions with specified statuses.",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "optional"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "status"
                            },
                            "value": {
                              "element": "enum",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "running"
                                },
                                {
                                  "element": "string",
                                  "content": "success"
                                },
                                {
                                  "element": "string",
                                  "content": "error"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": "Can be used multiple times.",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "optional"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "sort"
                            },
                            "value": {
                              "element": "enum",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "id"
                                },
                                {
                                  "element": "string",
                                  "content": "id:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "id:desc"
                                },
                                {
                                  "element": "string",
                                  "content": "command"
                                },
                                {
                                  "element": "string",
                                  "content": "command:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "command:desc"
                                },
                                {
                                  "element": "string",
                                  "content": "status"
                                },
                                {
                                  "element": "string",
                                  "content": "status:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "status:desc"
                                },
                                {
                                  "element": "string",
                                  "content": "progress"
                                },
                                {
                                  "element": "string",
                                  "content": "progress:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "progress:desc"
                                },
                                {
                                  "element": "string",
                                  "content": "started"
                                },
                                {
                                  "element": "string",
                                  "content": "started:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "started:desc"
                                },
                                {
                                  "element": "string",
                                  "content": "finished"
                                },
                                {
                                  "element": "string",
                                  "content": "finished:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "finished:desc"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Returns all action objects. You can select specific actions only and sort the results by using URI parameters."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "200",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `actions` key in the reply contains an array of action objects with this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of the action |\n| command | string | Command executed in the action |\n| status | string | Status of the action <br>Choices: `success`, `running`, `error` |\n| progress | number | Progress of action in percent |\n| started | string | Point in time when the action was started (in ISO-8601 format) |\n| finished | string,&nbsp;null | Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null. |\n| resources | array | Resources the action relates to |\n| error | object,&nbsp;null | Error message for the action if error occured, otherwise null. |\n\n> #### Example curl\n ```bash\n curl -H \"Authorization: Bearer $API_TOKEN\" \\\nhttps://api.hetzner.cloud/v1/actions\n ```"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required",
                                          "fixedType"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "actions"
                                        },
                                        "value": {
                                          "element": "array",
                                          "content": [
                                            {
                                              "element": "Action"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"actions\": [\n    {\n      \"id\": 13,\n      \"command\": \"start_server\",\n      \"status\": \"success\",\n      \"progress\": 100,\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"finished\": \"2016-01-30T23:56:00+00:00\",\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      }\n    }\n  ]\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"actions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\",\n            \"description\": \"ID of the action\"\n          },\n          \"command\": {\n            \"type\": \"string\",\n            \"description\": \"Command executed in the action\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"success\",\n              \"running\",\n              \"error\"\n            ],\n            \"description\": \"Status of the action\"\n          },\n          \"progress\": {\n            \"type\": \"number\",\n            \"description\": \"Progress of action in percent\"\n          },\n          \"started\": {\n            \"type\": \"string\",\n            \"description\": \"Point in time when the action was started (in ISO-8601 format)\"\n          },\n          \"finished\": {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ],\n            \"description\": \"Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null.\"\n          },\n          \"resources\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\",\n                  \"description\": \"ID of resource referenced\"\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"description\": \"Type of resource referenced\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"type\"\n              ]\n            },\n            \"description\": \"Resources the action relates to\"\n          },\n          \"error\": {\n            \"type\": [\n              \"object\",\n              \"null\"\n            ],\n            \"properties\": {\n              \"code\": {\n                \"type\": \"string\",\n                \"description\": \"Fixed machine readable code\"\n              },\n              \"message\": {\n                \"type\": \"string\",\n                \"description\": \"Humanized error message.\"\n              }\n            },\n            \"required\": [\n              \"code\",\n              \"message\"\n            ],\n            \"description\": \"Error message for the action if error occured, otherwise null.\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"command\",\n          \"status\",\n          \"progress\",\n          \"started\",\n          \"finished\",\n          \"resources\",\n          \"error\"\n        ]\n      }\n    }\n  },\n  \"required\": [\n    \"actions\"\n  ]\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Get one Action"
                  },
                  "attributes": {
                    "href": "/actions/{id}",
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": "ID of the action",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "id"
                            },
                            "value": {
                              "element": "string",
                              "content": "1337"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Returns a specific action object."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "200",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `action` key in the reply has this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of the action |\n| command | string | Command executed in the action |\n| status | string | Status of the action <br>Choices: `success`, `running`, `error` |\n| progress | number | Progress of action in percent |\n| started | string | Point in time when the action was started (in ISO-8601 format) |\n| finished | string,&nbsp;null | Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null. |\n| resources | array | Resources the action relates to |\n| error | object,&nbsp;null | Error message for the action if error occured, otherwise null. |\n\n> #### Example curl\n ```bash\n curl -H \"Authorization: Bearer $API_TOKEN\" \\\nhttps://api.hetzner.cloud/v1/actions/1337\n ```"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "action"
                                        },
                                        "value": {
                                          "element": "Action"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"action\": {\n    \"id\": 13,\n    \"command\": \"start_server\",\n    \"status\": \"success\",\n    \"progress\": 100,\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"finished\": \"2016-01-30T23:56:00+00:00\",\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    }\n  }\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"action\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\",\n          \"description\": \"ID of the action\"\n        },\n        \"command\": {\n          \"type\": \"string\",\n          \"description\": \"Command executed in the action\"\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"success\",\n            \"running\",\n            \"error\"\n          ],\n          \"description\": \"Status of the action\"\n        },\n        \"progress\": {\n          \"type\": \"number\",\n          \"description\": \"Progress of action in percent\"\n        },\n        \"started\": {\n          \"type\": \"string\",\n          \"description\": \"Point in time when the action was started (in ISO-8601 format)\"\n        },\n        \"finished\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ],\n          \"description\": \"Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null.\"\n        },\n        \"resources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"number\",\n                \"description\": \"ID of resource referenced\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of resource referenced\"\n              }\n            },\n            \"required\": [\n              \"id\",\n              \"type\"\n            ]\n          },\n          \"description\": \"Resources the action relates to\"\n        },\n        \"error\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"code\": {\n              \"type\": \"string\",\n              \"description\": \"Fixed machine readable code\"\n            },\n            \"message\": {\n              \"type\": \"string\",\n              \"description\": \"Humanized error message.\"\n            }\n          },\n          \"required\": [\n            \"code\",\n            \"message\"\n          ],\n          \"description\": \"Error message for the action if error occured, otherwise null.\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"command\",\n        \"status\",\n        \"progress\",\n        \"started\",\n        \"finished\",\n        \"resources\",\n        \"error\"\n      ]\n    }\n  },\n  \"required\": [\n    \"action\"\n  ]\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "element": "resource",
              "meta": {
                "title": "Servers"
              },
              "attributes": {
                "href": "/servers"
              },
              "content": [
                {
                  "element": "copy",
                  "content": "Servers are virtual machines that can be provisioned."
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Get all Servers"
                  },
                  "attributes": {
                    "href": "/servers{?status,name,label_selector}",
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": "Can be used multiple times. The response will only contain server matching the status.",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "optional"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "status"
                            },
                            "value": {
                              "element": "enum",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "initializing"
                                },
                                {
                                  "element": "string",
                                  "content": "starting"
                                },
                                {
                                  "element": "string",
                                  "content": "running"
                                },
                                {
                                  "element": "string",
                                  "content": "stopping"
                                },
                                {
                                  "element": "string",
                                  "content": "off"
                                },
                                {
                                  "element": "string",
                                  "content": "deleting"
                                },
                                {
                                  "element": "string",
                                  "content": "rebuilding"
                                },
                                {
                                  "element": "string",
                                  "content": "migrating"
                                },
                                {
                                  "element": "string",
                                  "content": "unknown"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": "Can be used to filter servers by their name. The response will only contain the server matching the specified name.",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "optional"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "name"
                            },
                            "value": {
                              "element": "string"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": "Can be used to filter servers by labels. The response will only contain servers matching the label selector.",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "optional"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "label_selector"
                            },
                            "value": {
                              "element": "string"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Returns all existing server objects."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "200",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `servers` key in the reply contains an array of server objects with this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of server |\n| name | string | Name of the server (must be unique per project and a valid hostname as per RFC 1123) |\n| status | string | Status of the server <br>Choices: `running`, `initializing`, `starting`, `stopping`, `off`, `deleting`, `migrating`, `rebuilding`, `unknown` |\n| created | string | Point in time when the server was created (in ISO-8601 format) |\n| public_net | object | Public network information. The servers ipv4 address can be found in `public_net->ipv4->ip` |\n| server_type | object | Type of server - determines how much ram, disk and cpu a server has |\n| datacenter | object | Datacenter this server is located at |\n| image | object,&nbsp;null | Image this server was created from. |\n| iso | object,&nbsp;null | ISO image that is attached to this server. Null if no ISO is attached. |\n| rescue_enabled | boolean | True if rescue mode is enabled: Server will then boot into rescue system on next reboot. |\n| locked | boolean | True if server has been locked and is not available to user. |\n| backup_window | string,&nbsp;null | Time window (UTC) in which the backup will run, or null if the backups are not enabled |\n| outgoing_traffic | number,&nbsp;null | Outbound Traffic for the current billing period in bytes |\n| ingoing_traffic | number,&nbsp;null | Inbound Traffic for the current billing period in bytes |\n| included_traffic | number | Free Traffic for the current billing period in bytes |\n| protection | object | Protection configuration for the server |\n| labels | object | User-defined labels (key-value pairs) |\n| volumes | array | IDs of Volumes assigned to this server. |\n\n> #### Example curl\n ```bash\n curl -H \"Authorization: Bearer $API_TOKEN\" \\\nhttps://api.hetzner.cloud/v1/servers\n ```"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required",
                                          "fixedType"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "servers"
                                        },
                                        "value": {
                                          "element": "array",
                                          "content": [
                                            {
                                              "element": "Server"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"servers\": [\n    {\n      \"id\": 42,\n      \"name\": \"my-server\",\n      \"status\": \"running\",\n      \"created\": \"2016-01-30T23:50+00:00\",\n      \"public_net\": {\n        \"ipv4\": {\n          \"ip\": \"1.2.3.4\",\n          \"blocked\": false,\n          \"dns_ptr\": \"server01.example.com\"\n        },\n        \"ipv6\": {\n          \"ip\": \"2001:db8::/64\",\n          \"blocked\": false,\n          \"dns_ptr\": [\n            {\n              \"ip\": \"2001:db8::1\",\n              \"dns_ptr\": \"server.example.com\"\n            }\n          ]\n        },\n        \"floating_ips\": [\n          478\n        ]\n      },\n      \"server_type\": {\n        \"id\": 1,\n        \"name\": \"cx11\",\n        \"description\": \"CX11\",\n        \"cores\": 1,\n        \"memory\": 1,\n        \"disk\": 25,\n        \"deprecated\": true,\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"net\": \"1.0000000000\",\n              \"gross\": \"1.1900000000000000\"\n            },\n            \"price_monthly\": {\n              \"net\": \"1.0000000000\",\n              \"gross\": \"1.1900000000000000\"\n            }\n          }\n        ],\n        \"storage_type\": \"local\",\n        \"cpu_type\": \"shared\"\n      },\n      \"datacenter\": {\n        \"id\": 1,\n        \"name\": \"fsn1-dc8\",\n        \"description\": \"Falkenstein 1 DC 8\",\n        \"location\": {\n          \"id\": 1,\n          \"name\": \"fsn1\",\n          \"description\": \"Falkenstein DC Park 1\",\n          \"country\": \"DE\",\n          \"city\": \"Falkenstein\",\n          \"latitude\": 50.47612,\n          \"longitude\": 12.370071\n        },\n        \"server_types\": {\n          \"supported\": [\n            1,\n            2,\n            3\n          ],\n          \"available\": [\n            1,\n            2,\n            3\n          ],\n          \"available_for_migration\": [\n            1,\n            2,\n            3\n          ]\n        }\n      },\n      \"image\": {\n        \"id\": 4711,\n        \"type\": \"snapshot\",\n        \"status\": \"available\",\n        \"name\": \"ubuntu-16.04\",\n        \"description\": \"Ubuntu 16.04 Standard 64 bit\",\n        \"image_size\": 2.3,\n        \"disk_size\": 10,\n        \"created\": \"2016-01-30T23:50+00:00\",\n        \"created_from\": {\n          \"id\": 1,\n          \"name\": \"Server\"\n        },\n        \"bound_to\": null,\n        \"os_flavor\": \"ubuntu\",\n        \"os_version\": \"16.04\",\n        \"rapid_deploy\": false,\n        \"protection\": {\n          \"delete\": false\n        },\n        \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n        \"labels\": {}\n      },\n      \"iso\": {\n        \"id\": 4711,\n        \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n        \"description\": \"FreeBSD 11.0 x64\",\n        \"type\": \"public\",\n        \"deprecated\": \"2018-02-28T00:00:00+00:00\"\n      },\n      \"rescue_enabled\": false,\n      \"locked\": false,\n      \"backup_window\": \"22-02\",\n      \"outgoing_traffic\": 123456,\n      \"ingoing_traffic\": 123456,\n      \"included_traffic\": 654321,\n      \"protection\": {\n        \"delete\": false,\n        \"rebuild\": false\n      },\n      \"labels\": {},\n      \"volumes\": []\n    }\n  ]\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"servers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\",\n            \"description\": \"ID of server\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the server (must be unique per project and a valid hostname as per RFC 1123)\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"running\",\n              \"initializing\",\n              \"starting\",\n              \"stopping\",\n              \"off\",\n              \"deleting\",\n              \"migrating\",\n              \"rebuilding\",\n              \"unknown\"\n            ],\n            \"description\": \"Status of the server\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"description\": \"Point in time when the server was created (in ISO-8601 format)\"\n          },\n          \"public_net\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"ipv4\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"ip\": {\n                    \"type\": \"string\",\n                    \"description\": \"IP address (v4) of this server.\"\n                  },\n                  \"blocked\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"If the IP is blocked by our anti abuse dept\"\n                  },\n                  \"dns_ptr\": {\n                    \"type\": \"string\",\n                    \"description\": \"Reverse DNS PTR entry for the IPv4 addresses of this server.\"\n                  }\n                },\n                \"required\": [\n                  \"ip\",\n                  \"blocked\",\n                  \"dns_ptr\"\n                ],\n                \"description\": \"IP address (v4) and its reverse dns entry of this server.\"\n              },\n              \"ipv6\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"ip\": {\n                    \"type\": \"string\",\n                    \"description\": \"IP address (v4) of this server.\"\n                  },\n                  \"blocked\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"If the IP is blocked by our anti abuse dept\"\n                  },\n                  \"dns_ptr\": {\n                    \"type\": [\n                      \"array\",\n                      \"null\"\n                    ],\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"ip\": {\n                          \"type\": \"string\",\n                          \"description\": \"Single IPv6 address of this server for which the reverse DNS entry has been set up.\"\n                        },\n                        \"dns_ptr\": {\n                          \"type\": \"string\",\n                          \"description\": \"DNS pointer for the specific IP address.\"\n                        }\n                      },\n                      \"required\": [\n                        \"ip\",\n                        \"dns_ptr\"\n                      ]\n                    },\n                    \"description\": \"Reverse DNS PTR entries for the IPv6 addresses of this server, `null` by default.\"\n                  }\n                },\n                \"required\": [\n                  \"ip\",\n                  \"blocked\",\n                  \"dns_ptr\"\n                ],\n                \"description\": \"IPv6 network assigned to this server and its reverse dns entry.\"\n              },\n              \"floating_ips\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"number\"\n                },\n                \"description\": \"IDs of floating IPs assigned to this server.\"\n              }\n            },\n            \"required\": [\n              \"ipv4\",\n              \"ipv6\",\n              \"floating_ips\"\n            ],\n            \"description\": \"Public network information. The servers ipv4 address can be found in `public_net->ipv4->ip`\"\n          },\n          \"server_type\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"number\",\n                \"description\": \"ID of the server type\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"Unique identifier of the server type\"\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"description\": \"Description of the server type\"\n              },\n              \"cores\": {\n                \"type\": \"number\",\n                \"description\": \"Number of cpu cores a server of this type will have\"\n              },\n              \"memory\": {\n                \"type\": \"number\",\n                \"description\": \"Memory a server of this type will have in GB\"\n              },\n              \"disk\": {\n                \"type\": \"number\",\n                \"description\": \"Disk size a server of this type will have in GB\"\n              },\n              \"deprecated\": {\n                \"type\": \"boolean\",\n                \"description\": \"True if server type is deprecated\"\n              },\n              \"prices\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"location\": {\n                      \"type\": \"string\",\n                      \"description\": \"Name of the location the price is for\"\n                    },\n                    \"price_hourly\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"net\": {\n                          \"type\": \"string\",\n                          \"description\": \"Price without VAT\"\n                        },\n                        \"gross\": {\n                          \"type\": \"string\",\n                          \"description\": \"Price with VAT added\"\n                        }\n                      },\n                      \"required\": [\n                        \"net\",\n                        \"gross\"\n                      ],\n                      \"description\": \"Hourly costs for a server type in this location\"\n                    },\n                    \"price_monthly\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"net\": {\n                          \"type\": \"string\",\n                          \"description\": \"Price without VAT\"\n                        },\n                        \"gross\": {\n                          \"type\": \"string\",\n                          \"description\": \"Price with VAT added\"\n                        }\n                      },\n                      \"required\": [\n                        \"net\",\n                        \"gross\"\n                      ],\n                      \"description\": \"Monthly costs for a server type in this location\"\n                    }\n                  },\n                  \"required\": [\n                    \"location\",\n                    \"price_hourly\",\n                    \"price_monthly\"\n                  ]\n                },\n                \"description\": \"Prices in different Locations\"\n              },\n              \"storage_type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"local\",\n                  \"network\"\n                ],\n                \"description\": \"Type of server boot drive. Local has higher speed. Network has better availability.\"\n              },\n              \"cpu_type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"shared\",\n                  \"dedicated\"\n                ],\n                \"description\": \"Type of cpu.\"\n              }\n            },\n            \"required\": [\n              \"id\",\n              \"name\",\n              \"description\",\n              \"cores\",\n              \"memory\",\n              \"disk\",\n              \"deprecated\",\n              \"prices\",\n              \"storage_type\",\n              \"cpu_type\"\n            ],\n            \"description\": \"Type of server - determines how much ram, disk and cpu a server has\"\n          },\n          \"datacenter\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"number\",\n                \"description\": \"ID of the datacenter\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"Unique identifier of the datacenter\"\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"description\": \"Description of the datacenter\"\n              },\n              \"location\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the location\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier of the location\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"Description of the location\"\n                  },\n                  \"country\": {\n                    \"type\": \"string\",\n                    \"description\": \"ISO 3166-1 alpha-2 code of the country the location resides in\"\n                  },\n                  \"city\": {\n                    \"type\": \"string\",\n                    \"description\": \"City the location is closest to\"\n                  },\n                  \"latitude\": {\n                    \"type\": \"number\",\n                    \"description\": \"Latitude of the city closest to the location\"\n                  },\n                  \"longitude\": {\n                    \"type\": \"number\",\n                    \"description\": \"Longitude of the city closest to the location\"\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"name\",\n                  \"description\",\n                  \"country\",\n                  \"city\",\n                  \"latitude\",\n                  \"longitude\"\n                ],\n                \"description\": \"Location where the datacenter resides in\"\n              },\n              \"server_types\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"supported\": {\n                    \"type\": \"array\",\n                    \"items\": [\n                      {\n                        \"type\": \"number\"\n                      },\n                      {\n                        \"type\": \"number\"\n                      },\n                      {\n                        \"type\": \"number\"\n                      }\n                    ],\n                    \"description\": \"IDs of server types that are supported in the datacenter\"\n                  },\n                  \"available\": {\n                    \"type\": \"array\",\n                    \"items\": [\n                      {\n                        \"type\": \"number\"\n                      },\n                      {\n                        \"type\": \"number\"\n                      },\n                      {\n                        \"type\": \"number\"\n                      }\n                    ],\n                    \"description\": \"IDs of server types that are supported and for which the datacenter has enough resources left\"\n                  },\n                  \"available_for_migration\": {\n                    \"type\": \"array\",\n                    \"items\": [\n                      {\n                        \"type\": \"number\"\n                      },\n                      {\n                        \"type\": \"number\"\n                      },\n                      {\n                        \"type\": \"number\"\n                      }\n                    ],\n                    \"description\": \"IDs of server types that are supported and for which the datacenter has enough resources left\"\n                  }\n                },\n                \"required\": [\n                  \"supported\",\n                  \"available\",\n                  \"available_for_migration\"\n                ],\n                \"description\": \"The server types the datacenter can handle\"\n              }\n            },\n            \"required\": [\n              \"id\",\n              \"name\",\n              \"description\",\n              \"location\",\n              \"server_types\"\n            ],\n            \"description\": \"Datacenter this server is located at\"\n          },\n          \"image\": {\n            \"type\": [\n              \"object\",\n              \"null\"\n            ],\n            \"properties\": {\n              \"id\": {\n                \"type\": \"number\",\n                \"description\": \"ID of the image\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"system\",\n                  \"snapshot\",\n                  \"backup\"\n                ],\n                \"description\": \"Type of the image\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"available\",\n                  \"creating\"\n                ],\n                \"description\": \"Whether the image can be used or if it's still being created\"\n              },\n              \"name\": {\n                \"type\": [\n                  \"string\",\n                  \"null\"\n                ],\n                \"description\": \"Unique identifier of the image. This value is only set for system images.\"\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"description\": \"Description of the image\"\n              },\n              \"image_size\": {\n                \"type\": [\n                  \"number\",\n                  \"null\"\n                ],\n                \"description\": \"Size of the image file in our storage in GB. For snapshot images this is the value relevant for calculating costs for the image.\"\n              },\n              \"disk_size\": {\n                \"type\": \"number\",\n                \"description\": \"Size of the disk contained in the image in GB.\"\n              },\n              \"created\": {\n                \"type\": \"string\",\n                \"description\": \"Point in time when the image was created (in ISO-8601 format)\"\n              },\n              \"created_from\": {\n                \"type\": [\n                  \"object\",\n                  \"null\"\n                ],\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"number\",\n                    \"description\": \"ID of the server the image was created from\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Server name at the time the image was created\"\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"name\"\n                ],\n                \"description\": \"Information about the server the image was created from\"\n              },\n              \"bound_to\": {\n                \"type\": [\n                  \"number\",\n                  \"null\"\n                ],\n                \"description\": \"ID of server the image is bound to. Only set for images of type `backup`.\"\n              },\n              \"os_flavor\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"ubuntu\",\n                  \"centos\",\n                  \"debian\",\n                  \"fedora\",\n                  \"unknown\"\n                ],\n                \"description\": \"Flavor of operating system contained in the image\"\n              },\n              \"os_version\": {\n                \"type\": [\n                  \"string\",\n                  \"null\"\n                ],\n                \"description\": \"Operating system version\"\n              },\n              \"rapid_deploy\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates that rapid deploy of the image is available\"\n              },\n              \"protection\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"delete\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"If true, prevents the snapshot from being deleted\"\n                  }\n                },\n                \"required\": [\n                  \"delete\"\n                ],\n                \"description\": \"Protection configuration for the image\"\n              },\n              \"deprecated\": {\n                \"type\": [\n                  \"string\",\n                  \"null\"\n                ],\n                \"description\": \"Point in time when the image is considered to be deprecated (in ISO-8601 format)\"\n              },\n              \"labels\": {\n                \"type\": \"object\",\n                \"properties\": {},\n                \"description\": \"User-defined labels (key-value pairs)\"\n              }\n            },\n            \"required\": [\n              \"id\",\n              \"type\",\n              \"status\",\n              \"name\",\n              \"description\",\n              \"image_size\",\n              \"disk_size\",\n              \"created\",\n              \"created_from\",\n              \"bound_to\",\n              \"os_flavor\",\n              \"os_version\",\n              \"protection\",\n              \"deprecated\",\n              \"labels\"\n            ],\n            \"description\": \"Image this server was created from.\"\n          },\n          \"iso\": {\n            \"type\": [\n              \"object\",\n              \"null\"\n            ],\n            \"properties\": {\n              \"id\": {\n                \"type\": \"number\",\n                \"description\": \"ID of the ISO\"\n              },\n              \"name\": {\n                \"type\": [\n                  \"string\",\n                  \"null\"\n                ],\n                \"description\": \"Unique identifier of the ISO. Only set for public ISOs\"\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"description\": \"Description of the ISO\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"public\",\n                  \"private\"\n                ],\n                \"description\": \"Type of the ISO\"\n              },\n              \"deprecated\": {\n                \"type\": [\n                  \"string\",\n                  \"null\"\n                ],\n                \"description\": \"ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to servers.\"\n              }\n            },\n            \"required\": [\n              \"id\",\n              \"name\",\n              \"description\",\n              \"type\",\n              \"deprecated\"\n            ],\n            \"description\": \"ISO image that is attached to this server. Null if no ISO is attached.\"\n          },\n          \"rescue_enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if rescue mode is enabled: Server will then boot into rescue system on next reboot.\"\n          },\n          \"locked\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if server has been locked and is not available to user.\"\n          },\n          \"backup_window\": {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ],\n            \"description\": \"Time window (UTC) in which the backup will run, or null if the backups are not enabled\"\n          },\n          \"outgoing_traffic\": {\n            \"type\": [\n              \"number\",\n              \"null\"\n            ],\n            \"description\": \"Outbound Traffic for the current billing period in bytes\"\n          },\n          \"ingoing_traffic\": {\n            \"type\": [\n              \"number\",\n              \"null\"\n            ],\n            \"description\": \"Inbound Traffic for the current billing period in bytes\"\n          },\n          \"included_traffic\": {\n            \"type\": \"number\",\n            \"description\": \"Free Traffic for the current billing period in bytes\"\n          },\n          \"protection\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"delete\": {\n                \"type\": \"boolean\",\n                \"description\": \"If true, prevents the server from being deleted\"\n              },\n              \"rebuild\": {\n                \"type\": \"boolean\",\n                \"description\": \"If true, prevents the server from being rebuilt\"\n              }\n            },\n            \"required\": [\n              \"delete\",\n              \"rebuild\"\n            ],\n            \"description\": \"Protection configuration for the server\"\n          },\n          \"labels\": {\n            \"type\": \"object\",\n            \"properties\": {},\n            \"description\": \"User-defined labels (key-value pairs)\"\n          },\n          \"volumes\": {\n            \"type\": \"array\",\n            \"description\": \"IDs of Volumes assigned to this server.\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"status\",\n          \"created\",\n          \"public_net\",\n          \"server_type\",\n          \"datacenter\",\n          \"image\",\n          \"iso\",\n          \"rescue_enabled\",\n          \"locked\",\n          \"backup_window\",\n          \"outgoing_traffic\",\n          \"ingoing_traffic\",\n          \"included_traffic\",\n          \"protection\",\n          \"labels\"\n        ]\n      }\n    }\n  },\n  \"required\": [\n    \"servers\"\n  ]\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Get a Server"
                  },
                  "attributes": {
                    "href": "/servers/{id}",
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": "ID of the server",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "id"
                            },
                            "value": {
                              "element": "string",
                              "content": "42"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Returns a specific server object. The server must exist inside the project."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "200",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `server` key in the reply contains a server object with this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of server |\n| name | string | Name of the server (must be unique per project and a valid hostname as per RFC 1123) |\n| status | string | Status of the server <br>Choices: `running`, `initializing`, `starting`, `stopping`, `off`, `deleting`, `migrating`, `rebuilding`, `unknown` |\n| created | string | Point in time when the server was created (in ISO-8601 format) |\n| public_net | object | Public network information. The servers ipv4 address can be found in `public_net->ipv4->ip` |\n| server_type | object | Type of server - determines how much ram, disk and cpu a server has |\n| datacenter | object | Datacenter this server is located at |\n| image | object,&nbsp;null | Image this server was created from. |\n| iso | object,&nbsp;null | ISO image that is attached to this server. Null if no ISO is attached. |\n| rescue_enabled | boolean | True if rescue mode is enabled: Server will then boot into rescue system on next reboot. |\n| locked | boolean | True if server has been locked and is not available to user. |\n| backup_window | string,&nbsp;null | Time window (UTC) in which the backup will run, or null if the backups are not enabled |\n| outgoing_traffic | number,&nbsp;null | Outbound Traffic for the current billing period in bytes |\n| ingoing_traffic | number,&nbsp;null | Inbound Traffic for the current billing period in bytes |\n| included_traffic | number | Free Traffic for the current billing period in bytes |\n| protection | object | Protection configuration for the server |\n| labels | object | User-defined labels (key-value pairs) |\n| volumes | array | IDs of Volumes assigned to this server. |\n\n> #### Example curl\n ```bash\n curl -H \"Authorization: Bearer $API_TOKEN\" \\\nhttps://api.hetzner.cloud/v1/servers/42\n ```"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "server"
                                        },
                                        "value": {
                                          "element": "Server"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"server\": {\n    \"id\": 42,\n    \"name\": \"my-server\",\n    \"status\": \"running\",\n    \"created\": \"2016-01-30T23:50+00:00\",\n    \"public_net\": {\n      \"ipv4\": {\n        \"ip\": \"1.2.3.4\",\n        \"blocked\": false,\n        \"dns_ptr\": \"server01.example.com\"\n      },\n      \"ipv6\": {\n        \"ip\": \"2001:db8::/64\",\n        \"blocked\": false,\n        \"dns_ptr\": [\n          {\n            \"ip\": \"2001:db8::1\",\n            \"dns_ptr\": \"server.example.com\"\n          }\n        ]\n      },\n      \"floating_ips\": [\n        478\n      ]\n    },\n    \"server_type\": {\n      \"id\": 1,\n      \"name\": \"cx11\",\n      \"description\": \"CX11\",\n      \"cores\": 1,\n      \"memory\": 1,\n      \"disk\": 25,\n      \"deprecated\": true,\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"net\": \"1.0000000000\",\n            \"gross\": \"1.1900000000000000\"\n          },\n          \"price_monthly\": {\n            \"net\": \"1.0000000000\",\n            \"gross\": \"1.1900000000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"local\",\n      \"cpu_type\": \"shared\"\n    },\n    \"datacenter\": {\n      \"id\": 1,\n      \"name\": \"fsn1-dc8\",\n      \"description\": \"Falkenstein 1 DC 8\",\n      \"location\": {\n        \"id\": 1,\n        \"name\": \"fsn1\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"country\": \"DE\",\n        \"city\": \"Falkenstein\",\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071\n      },\n      \"server_types\": {\n        \"supported\": [\n          1,\n          2,\n          3\n        ],\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"image\": {\n      \"id\": 4711,\n      \"type\": \"snapshot\",\n      \"status\": \"available\",\n      \"name\": \"ubuntu-16.04\",\n      \"description\": \"Ubuntu 16.04 Standard 64 bit\",\n      \"image_size\": 2.3,\n      \"disk_size\": 10,\n      \"created\": \"2016-01-30T23:50+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"bound_to\": null,\n      \"os_flavor\": \"ubuntu\",\n      \"os_version\": \"16.04\",\n      \"rapid_deploy\": false,\n      \"protection\": {\n        \"delete\": false\n      },\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"labels\": {}\n    },\n    \"iso\": {\n      \"id\": 4711,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"type\": \"public\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\"\n    },\n    \"rescue_enabled\": false,\n    \"locked\": false,\n    \"backup_window\": \"22-02\",\n    \"outgoing_traffic\": 123456,\n    \"ingoing_traffic\": 123456,\n    \"included_traffic\": 654321,\n    \"protection\": {\n      \"delete\": false,\n      \"rebuild\": false\n    },\n    \"labels\": {},\n    \"volumes\": []\n  }\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"server\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\",\n          \"description\": \"ID of server\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the server (must be unique per project and a valid hostname as per RFC 1123)\"\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"running\",\n            \"initializing\",\n            \"starting\",\n            \"stopping\",\n            \"off\",\n            \"deleting\",\n            \"migrating\",\n            \"rebuilding\",\n            \"unknown\"\n          ],\n          \"description\": \"Status of the server\"\n        },\n        \"created\": {\n          \"type\": \"string\",\n          \"description\": \"Point in time when the server was created (in ISO-8601 format)\"\n        },\n        \"public_net\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"ipv4\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"ip\": {\n                  \"type\": \"string\",\n                  \"description\": \"IP address (v4) of this server.\"\n                },\n                \"blocked\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If the IP is blocked by our anti abuse dept\"\n                },\n                \"dns_ptr\": {\n                  \"type\": \"string\",\n                  \"description\": \"Reverse DNS PTR entry for the IPv4 addresses of this server.\"\n                }\n              },\n              \"required\": [\n                \"ip\",\n                \"blocked\",\n                \"dns_ptr\"\n              ],\n              \"description\": \"IP address (v4) and its reverse dns entry of this server.\"\n            },\n            \"ipv6\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"ip\": {\n                  \"type\": \"string\",\n                  \"description\": \"IP address (v4) of this server.\"\n                },\n                \"blocked\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If the IP is blocked by our anti abuse dept\"\n                },\n                \"dns_ptr\": {\n                  \"type\": [\n                    \"array\",\n                    \"null\"\n                  ],\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"ip\": {\n                        \"type\": \"string\",\n                        \"description\": \"Single IPv6 address of this server for which the reverse DNS entry has been set up.\"\n                      },\n                      \"dns_ptr\": {\n                        \"type\": \"string\",\n                        \"description\": \"DNS pointer for the specific IP address.\"\n                      }\n                    },\n                    \"required\": [\n                      \"ip\",\n                      \"dns_ptr\"\n                    ]\n                  },\n                  \"description\": \"Reverse DNS PTR entries for the IPv6 addresses of this server, `null` by default.\"\n                }\n              },\n              \"required\": [\n                \"ip\",\n                \"blocked\",\n                \"dns_ptr\"\n              ],\n              \"description\": \"IPv6 network assigned to this server and its reverse dns entry.\"\n            },\n            \"floating_ips\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"IDs of floating IPs assigned to this server.\"\n            }\n          },\n          \"required\": [\n            \"ipv4\",\n            \"ipv6\",\n            \"floating_ips\"\n          ],\n          \"description\": \"Public network information. The servers ipv4 address can be found in `public_net->ipv4->ip`\"\n        },\n        \"server_type\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the server type\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier of the server type\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the server type\"\n            },\n            \"cores\": {\n              \"type\": \"number\",\n              \"description\": \"Number of cpu cores a server of this type will have\"\n            },\n            \"memory\": {\n              \"type\": \"number\",\n              \"description\": \"Memory a server of this type will have in GB\"\n            },\n            \"disk\": {\n              \"type\": \"number\",\n              \"description\": \"Disk size a server of this type will have in GB\"\n            },\n            \"deprecated\": {\n              \"type\": \"boolean\",\n              \"description\": \"True if server type is deprecated\"\n            },\n            \"prices\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name of the location the price is for\"\n                  },\n                  \"price_hourly\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"net\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price without VAT\"\n                      },\n                      \"gross\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price with VAT added\"\n                      }\n                    },\n                    \"required\": [\n                      \"net\",\n                      \"gross\"\n                    ],\n                    \"description\": \"Hourly costs for a server type in this location\"\n                  },\n                  \"price_monthly\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"net\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price without VAT\"\n                      },\n                      \"gross\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price with VAT added\"\n                      }\n                    },\n                    \"required\": [\n                      \"net\",\n                      \"gross\"\n                    ],\n                    \"description\": \"Monthly costs for a server type in this location\"\n                  }\n                },\n                \"required\": [\n                  \"location\",\n                  \"price_hourly\",\n                  \"price_monthly\"\n                ]\n              },\n              \"description\": \"Prices in different Locations\"\n            },\n            \"storage_type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"local\",\n                \"network\"\n              ],\n              \"description\": \"Type of server boot drive. Local has higher speed. Network has better availability.\"\n            },\n            \"cpu_type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"shared\",\n                \"dedicated\"\n              ],\n              \"description\": \"Type of cpu.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"description\",\n            \"cores\",\n            \"memory\",\n            \"disk\",\n            \"deprecated\",\n            \"prices\",\n            \"storage_type\",\n            \"cpu_type\"\n          ],\n          \"description\": \"Type of server - determines how much ram, disk and cpu a server has\"\n        },\n        \"datacenter\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the datacenter\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier of the datacenter\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the datacenter\"\n            },\n            \"location\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\",\n                  \"description\": \"ID of the location\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"Unique identifier of the location\"\n                },\n                \"description\": {\n                  \"type\": \"string\",\n                  \"description\": \"Description of the location\"\n                },\n                \"country\": {\n                  \"type\": \"string\",\n                  \"description\": \"ISO 3166-1 alpha-2 code of the country the location resides in\"\n                },\n                \"city\": {\n                  \"type\": \"string\",\n                  \"description\": \"City the location is closest to\"\n                },\n                \"latitude\": {\n                  \"type\": \"number\",\n                  \"description\": \"Latitude of the city closest to the location\"\n                },\n                \"longitude\": {\n                  \"type\": \"number\",\n                  \"description\": \"Longitude of the city closest to the location\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\",\n                \"description\",\n                \"country\",\n                \"city\",\n                \"latitude\",\n                \"longitude\"\n              ],\n              \"description\": \"Location where the datacenter resides in\"\n            },\n            \"server_types\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"supported\": {\n                  \"type\": \"array\",\n                  \"items\": [\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    }\n                  ],\n                  \"description\": \"IDs of server types that are supported in the datacenter\"\n                },\n                \"available\": {\n                  \"type\": \"array\",\n                  \"items\": [\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    }\n                  ],\n                  \"description\": \"IDs of server types that are supported and for which the datacenter has enough resources left\"\n                },\n                \"available_for_migration\": {\n                  \"type\": \"array\",\n                  \"items\": [\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    }\n                  ],\n                  \"description\": \"IDs of server types that are supported and for which the datacenter has enough resources left\"\n                }\n              },\n              \"required\": [\n                \"supported\",\n                \"available\",\n                \"available_for_migration\"\n              ],\n              \"description\": \"The server types the datacenter can handle\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"description\",\n            \"location\",\n            \"server_types\"\n          ],\n          \"description\": \"Datacenter this server is located at\"\n        },\n        \"image\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the image\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"system\",\n                \"snapshot\",\n                \"backup\"\n              ],\n              \"description\": \"Type of the image\"\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"available\",\n                \"creating\"\n              ],\n              \"description\": \"Whether the image can be used or if it's still being created\"\n            },\n            \"name\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Unique identifier of the image. This value is only set for system images.\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the image\"\n            },\n            \"image_size\": {\n              \"type\": [\n                \"number\",\n                \"null\"\n              ],\n              \"description\": \"Size of the image file in our storage in GB. For snapshot images this is the value relevant for calculating costs for the image.\"\n            },\n            \"disk_size\": {\n              \"type\": \"number\",\n              \"description\": \"Size of the disk contained in the image in GB.\"\n            },\n            \"created\": {\n              \"type\": \"string\",\n              \"description\": \"Point in time when the image was created (in ISO-8601 format)\"\n            },\n            \"created_from\": {\n              \"type\": [\n                \"object\",\n                \"null\"\n              ],\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\",\n                  \"description\": \"ID of the server the image was created from\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"Server name at the time the image was created\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\"\n              ],\n              \"description\": \"Information about the server the image was created from\"\n            },\n            \"bound_to\": {\n              \"type\": [\n                \"number\",\n                \"null\"\n              ],\n              \"description\": \"ID of server the image is bound to. Only set for images of type `backup`.\"\n            },\n            \"os_flavor\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ubuntu\",\n                \"centos\",\n                \"debian\",\n                \"fedora\",\n                \"unknown\"\n              ],\n              \"description\": \"Flavor of operating system contained in the image\"\n            },\n            \"os_version\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Operating system version\"\n            },\n            \"rapid_deploy\": {\n              \"type\": \"boolean\",\n              \"description\": \"Indicates that rapid deploy of the image is available\"\n            },\n            \"protection\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"delete\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If true, prevents the snapshot from being deleted\"\n                }\n              },\n              \"required\": [\n                \"delete\"\n              ],\n              \"description\": \"Protection configuration for the image\"\n            },\n            \"deprecated\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Point in time when the image is considered to be deprecated (in ISO-8601 format)\"\n            },\n            \"labels\": {\n              \"type\": \"object\",\n              \"properties\": {},\n              \"description\": \"User-defined labels (key-value pairs)\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"type\",\n            \"status\",\n            \"name\",\n            \"description\",\n            \"image_size\",\n            \"disk_size\",\n            \"created\",\n            \"created_from\",\n            \"bound_to\",\n            \"os_flavor\",\n            \"os_version\",\n            \"protection\",\n            \"deprecated\",\n            \"labels\"\n          ],\n          \"description\": \"Image this server was created from.\"\n        },\n        \"iso\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the ISO\"\n            },\n            \"name\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Unique identifier of the ISO. Only set for public ISOs\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the ISO\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"public\",\n                \"private\"\n              ],\n              \"description\": \"Type of the ISO\"\n            },\n            \"deprecated\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to servers.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"description\",\n            \"type\",\n            \"deprecated\"\n          ],\n          \"description\": \"ISO image that is attached to this server. Null if no ISO is attached.\"\n        },\n        \"rescue_enabled\": {\n          \"type\": \"boolean\",\n          \"description\": \"True if rescue mode is enabled: Server will then boot into rescue system on next reboot.\"\n        },\n        \"locked\": {\n          \"type\": \"boolean\",\n          \"description\": \"True if server has been locked and is not available to user.\"\n        },\n        \"backup_window\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ],\n          \"description\": \"Time window (UTC) in which the backup will run, or null if the backups are not enabled\"\n        },\n        \"outgoing_traffic\": {\n          \"type\": [\n            \"number\",\n            \"null\"\n          ],\n          \"description\": \"Outbound Traffic for the current billing period in bytes\"\n        },\n        \"ingoing_traffic\": {\n          \"type\": [\n            \"number\",\n            \"null\"\n          ],\n          \"description\": \"Inbound Traffic for the current billing period in bytes\"\n        },\n        \"included_traffic\": {\n          \"type\": \"number\",\n          \"description\": \"Free Traffic for the current billing period in bytes\"\n        },\n        \"protection\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"delete\": {\n              \"type\": \"boolean\",\n              \"description\": \"If true, prevents the server from being deleted\"\n            },\n            \"rebuild\": {\n              \"type\": \"boolean\",\n              \"description\": \"If true, prevents the server from being rebuilt\"\n            }\n          },\n          \"required\": [\n            \"delete\",\n            \"rebuild\"\n          ],\n          \"description\": \"Protection configuration for the server\"\n        },\n        \"labels\": {\n          \"type\": \"object\",\n          \"properties\": {},\n          \"description\": \"User-defined labels (key-value pairs)\"\n        },\n        \"volumes\": {\n          \"type\": \"array\",\n          \"description\": \"IDs of Volumes assigned to this server.\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"status\",\n        \"created\",\n        \"public_net\",\n        \"server_type\",\n        \"datacenter\",\n        \"image\",\n        \"iso\",\n        \"rescue_enabled\",\n        \"locked\",\n        \"backup_window\",\n        \"outgoing_traffic\",\n        \"ingoing_traffic\",\n        \"included_traffic\",\n        \"protection\",\n        \"labels\"\n      ]\n    }\n  },\n  \"required\": [\n    \"server\"\n  ]\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Create a Server"
                  },
                  "attributes": {
                    "href": "/servers"
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Creates a new server. Returns preliminary information about the server as well as an action that covers progress of creation."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "POST",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "Please note that server names must be unique per project and valid hostnames as per RFC 1123\n(i.e. may only contain letters, digits, periods, and dashes).\n\nFor `server_type` you can either use the ID as listed in [`/server_types`](#server-types-get-all-server-types) or its name.\n\nFor `image` you can either use the ID as listed in [`/images`](#images-get-all-images) or its name.\n\nIf you want to create the server in a location, you must set `location` to the ID or name as listed in [`/locations`](#locations-get-all-locations). This is the recommended way. You can be even more specific by setting `datacenter` to the ID or name as listed in [`/datacenters`](#datacenters-get-all-datacenters). However directly specifying the datacenter is discouraged since supply availability in datacenters varies greatly and datacenters may be out of stock for extended periods of time or not serve certain server types at all.\n\nFor accessing your server we strongly recommend to use SSH keys by passing the respective key ids in `ssh_keys`. If you do not specify any `ssh_keys` we will generate a root password for you and\nreturn it in the response.\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| name | string&nbsp;(required) | Name of the server to create (must be unique per project and a valid hostname as per RFC 1123) |\n| server_type | string&nbsp;(required) | ID or name of the server type this server should be created with |\n| start_after_create | boolean&nbsp;(optional) | Start Server right after creation. Defaults to true. |\n| image | string&nbsp;(required) | ID or name of the image the server is created from |\n| ssh_keys | array&nbsp;(optional) | SSH key IDs or names which should be injected into the server at creation time |\n| volumes | array&nbsp;(optional) | Volume IDs which should be attached to the server at the creation time. Volumes must be in the same location. |\n| user_data | string&nbsp;(optional) | Cloud-Init user data to use during server creation. This field is limited to 32KiB. |\n| labels | object&nbsp;(optional) | User-defined labels (key-value pairs) |\n| automount | boolean&nbsp;(optional) | Auto mount volumes after attach. |\n| location | string&nbsp;(optional) | ID or name of location to create server in. |\n| datacenter | string&nbsp;(optional) | ID or name of datacenter to create server in. |\n\n> #### Example curl\n ```bash\n curl -X POST -H \"Content-Type: application/json\" -H \"Authorization: Bearer $API_TOKEN\" \\\n-d '{\"name\": \"my-server\", \"server_type\": \"cx11\", \"location\": \"nbg1\", \"start_after_create\": true, \"image\": \"ubuntu-16.04\", \"ssh_keys\": [\"my-ssh-key\"], \"volumes\": [1], \"user_data\": \"#cloud-config\\nruncmd:\\n- [touch, /root/cloud-init-worked]\\n\", \"automount\": false}' \\\nhttps://api.hetzner.cloud/v1/servers\n ```"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "Server create"
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"name\": \"my-server\",\n  \"server_type\": \"cx11\",\n  \"location\": \"nbg1\",\n  \"start_after_create\": true,\n  \"image\": \"ubuntu-16.04\",\n  \"ssh_keys\": [\n    \"my-ssh-key\"\n  ],\n  \"volumes\": [\n    1\n  ],\n  \"user_data\": \"#cloud-config\\\\nruncmd:\\\\n- [touch, /root/cloud-init-worked]\\\\n\",\n  \"automount\": false\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"Name of the server to create (must be unique per project and a valid hostname as per RFC 1123)\"\n    },\n    \"server_type\": {\n      \"type\": \"string\",\n      \"description\": \"ID or name of the server type this server should be created with\"\n    },\n    \"start_after_create\": {\n      \"type\": \"boolean\",\n      \"description\": \"Start Server right after creation. Defaults to true.\"\n    },\n    \"image\": {\n      \"type\": \"string\",\n      \"description\": \"ID or name of the image the server is created from\"\n    },\n    \"ssh_keys\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"SSH key IDs or names which should be injected into the server at creation time\"\n    },\n    \"volumes\": {\n      \"type\": \"array\",\n      \"description\": \"Volume IDs which should be attached to the server at the creation time. Volumes must be in the same location.\"\n    },\n    \"user_data\": {\n      \"type\": \"string\",\n      \"description\": \"Cloud-Init user data to use during server creation. This field is limited to 32KiB.\"\n    },\n    \"labels\": {\n      \"type\": \"object\",\n      \"properties\": {},\n      \"description\": \"User-defined labels (key-value pairs)\"\n    },\n    \"automount\": {\n      \"type\": \"boolean\",\n      \"description\": \"Auto mount volumes after attach.\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"server_type\",\n    \"image\"\n  ],\n  \"oneOf\": [\n    {\n      \"properties\": {\n        \"location\": {\n          \"type\": \"string\",\n          \"description\": \"ID or name of location to create server in.\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"datacenter\": {\n          \"type\": \"string\",\n          \"description\": \"ID or name of datacenter to create server in.\"\n        }\n      }\n    }\n  ]\n}"
                            }
                          ]
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "201",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `server` key in the reply contains a server object with this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of server |\n| name | string | Name of the server (must be unique per project and a valid hostname as per RFC 1123) |\n| status | string | Status of the server <br>Choices: `initializing`, `starting`, `running`, `stopping`, `off`, `deleting`, `migrating`, `rebuilding` |\n| created | string | Point in time when the server was created (in ISO-8601 format) |\n| public_net | object | Public network information. The servers ipv4 address can be found in `public_net->ipv4->ip` |\n| server_type | object | Type of server - determines how much ram, disk and cpu a server has |\n| datacenter | object | Datacenter this server is located at |\n| image | object,&nbsp;null | Image this server was created from. |\n| iso | object,&nbsp;null | ISO image that is attached to this server. Null if no ISO is attached. |\n| rescue_enabled | boolean | True if rescue mode is enabled: Server will then boot into rescue system on next reboot. |\n| locked | boolean | True if server has been locked and is not available to user. |\n| backup_window | string,&nbsp;null | Time window (UTC) in which the backup will run, or null if the backups are not enabled |\n| outgoing_traffic | number,&nbsp;null | Outbound Traffic for the current billing period in bytes |\n| ingoing_traffic | number,&nbsp;null | Inbound Traffic for the current billing period in bytes |\n| included_traffic | number | Free Traffic for the current billing period in bytes |\n| protection | object | Protection configuration for the server |\n| labels | object | User-defined labels (key-value pairs) |\n| volumes | array | IDs of Volumes assigned to this server. |\n\nThe `action` key in the reply contains an action object with this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of the action |\n| command | string | Command executed in the action |\n| status | string | Status of the action <br>Choices: `running`, `success`, `error` |\n| progress | number | Progress of action in percent |\n| started | string | Point in time when the action was started (in ISO-8601 format) |\n| finished | string,&nbsp;null | Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null. |\n| resources | array | Resources the action relates to |\n| error | object,&nbsp;null | Error message for the action if error occured, otherwise null. |\n\nAdditional actions like a `start_server` action to start the server after it has\nbeen created or `attach_volume` actions to attach volumes to the server are returned\nin the `next_actions` key (each element has the same structure as the `action` key).\n\n#### Call specific error codes\n\n| Code | Description |\n|------|-------------|\n| `placement_error` | An error during placement of the server occured |"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "server"
                                        },
                                        "value": {
                                          "element": "Server",
                                          "content": [
                                            {
                                              "element": "member",
                                              "meta": {
                                                "description": "Status of the server"
                                              },
                                              "attributes": {
                                                "typeAttributes": [
                                                  "required"
                                                ]
                                              },
                                              "content": {
                                                "key": {
                                                  "element": "string",
                                                  "content": "status"
                                                },
                                                "value": {
                                                  "element": "enum",
                                                  "attributes": {
                                                    "samples": [
                                                      [
                                                        {
                                                          "element": "string",
                                                          "content": "initializing"
                                                        }
                                                      ]
                                                    ]
                                                  },
                                                  "content": [
                                                    {
                                                      "element": "string",
                                                      "content": "initializing"
                                                    },
                                                    {
                                                      "element": "string",
                                                      "content": "starting"
                                                    },
                                                    {
                                                      "element": "string",
                                                      "content": "running"
                                                    },
                                                    {
                                                      "element": "string",
                                                      "content": "stopping"
                                                    },
                                                    {
                                                      "element": "string",
                                                      "content": "off"
                                                    },
                                                    {
                                                      "element": "string",
                                                      "content": "deleting"
                                                    },
                                                    {
                                                      "element": "string",
                                                      "content": "migrating"
                                                    },
                                                    {
                                                      "element": "string",
                                                      "content": "rebuilding"
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "action"
                                        },
                                        "value": {
                                          "element": "ActionRunning",
                                          "content": [
                                            {
                                              "element": "member",
                                              "attributes": {
                                                "typeAttributes": [
                                                  "required"
                                                ]
                                              },
                                              "content": {
                                                "key": {
                                                  "element": "string",
                                                  "content": "id"
                                                },
                                                "value": {
                                                  "element": "number",
                                                  "content": 1
                                                }
                                              }
                                            },
                                            {
                                              "element": "member",
                                              "content": {
                                                "key": {
                                                  "element": "string",
                                                  "content": "command"
                                                },
                                                "value": {
                                                  "element": "string",
                                                  "content": "create_server"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "next_actions"
                                        },
                                        "value": {
                                          "element": "array",
                                          "content": [
                                            {
                                              "element": "ActionRunning"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "element": "member",
                                      "meta": {
                                        "description": "Root password when no SSH keys have been specified"
                                      },
                                      "attributes": {
                                        "typeAttributes": [
                                          "required",
                                          "nullable"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "root_password"
                                        },
                                        "value": {
                                          "element": "string",
                                          "content": "YItygq1v3GYjjMomLaKc"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"server\": {\n    \"id\": 42,\n    \"name\": \"my-server\",\n    \"status\": \"initializing\",\n    \"created\": \"2016-01-30T23:50+00:00\",\n    \"public_net\": {\n      \"ipv4\": {\n        \"ip\": \"1.2.3.4\",\n        \"blocked\": false,\n        \"dns_ptr\": \"server01.example.com\"\n      },\n      \"ipv6\": {\n        \"ip\": \"2001:db8::/64\",\n        \"blocked\": false,\n        \"dns_ptr\": [\n          {\n            \"ip\": \"2001:db8::1\",\n            \"dns_ptr\": \"server.example.com\"\n          }\n        ]\n      },\n      \"floating_ips\": [\n        478\n      ]\n    },\n    \"server_type\": {\n      \"id\": 1,\n      \"name\": \"cx11\",\n      \"description\": \"CX11\",\n      \"cores\": 1,\n      \"memory\": 1,\n      \"disk\": 25,\n      \"deprecated\": true,\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"net\": \"1.0000000000\",\n            \"gross\": \"1.1900000000000000\"\n          },\n          \"price_monthly\": {\n            \"net\": \"1.0000000000\",\n            \"gross\": \"1.1900000000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"local\",\n      \"cpu_type\": \"shared\"\n    },\n    \"datacenter\": {\n      \"id\": 1,\n      \"name\": \"fsn1-dc8\",\n      \"description\": \"Falkenstein 1 DC 8\",\n      \"location\": {\n        \"id\": 1,\n        \"name\": \"fsn1\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"country\": \"DE\",\n        \"city\": \"Falkenstein\",\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071\n      },\n      \"server_types\": {\n        \"supported\": [\n          1,\n          2,\n          3\n        ],\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"image\": {\n      \"id\": 4711,\n      \"type\": \"snapshot\",\n      \"status\": \"available\",\n      \"name\": \"ubuntu-16.04\",\n      \"description\": \"Ubuntu 16.04 Standard 64 bit\",\n      \"image_size\": 2.3,\n      \"disk_size\": 10,\n      \"created\": \"2016-01-30T23:50+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"bound_to\": null,\n      \"os_flavor\": \"ubuntu\",\n      \"os_version\": \"16.04\",\n      \"rapid_deploy\": false,\n      \"protection\": {\n        \"delete\": false\n      },\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"labels\": {}\n    },\n    \"iso\": {\n      \"id\": 4711,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"type\": \"public\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\"\n    },\n    \"rescue_enabled\": false,\n    \"locked\": false,\n    \"backup_window\": \"22-02\",\n    \"outgoing_traffic\": 123456,\n    \"ingoing_traffic\": 123456,\n    \"included_traffic\": 654321,\n    \"protection\": {\n      \"delete\": false,\n      \"rebuild\": false\n    },\n    \"labels\": {},\n    \"volumes\": []\n  },\n  \"action\": {\n    \"id\": 1,\n    \"command\": \"create_server\",\n    \"status\": \"running\",\n    \"progress\": 0,\n    \"started\": \"2016-01-30T23:50+00:00\",\n    \"finished\": null,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    }\n  },\n  \"next_actions\": [\n    {\n      \"id\": 13,\n      \"command\": \"start_server\",\n      \"status\": \"running\",\n      \"progress\": 0,\n      \"started\": \"2016-01-30T23:50+00:00\",\n      \"finished\": null,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      }\n    }\n  ],\n  \"root_password\": \"YItygq1v3GYjjMomLaKc\"\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"server\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\",\n          \"description\": \"ID of server\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the server (must be unique per project and a valid hostname as per RFC 1123)\"\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"initializing\",\n            \"starting\",\n            \"running\",\n            \"stopping\",\n            \"off\",\n            \"deleting\",\n            \"migrating\",\n            \"rebuilding\"\n          ],\n          \"description\": \"Status of the server\"\n        },\n        \"created\": {\n          \"type\": \"string\",\n          \"description\": \"Point in time when the server was created (in ISO-8601 format)\"\n        },\n        \"public_net\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"ipv4\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"ip\": {\n                  \"type\": \"string\",\n                  \"description\": \"IP address (v4) of this server.\"\n                },\n                \"blocked\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If the IP is blocked by our anti abuse dept\"\n                },\n                \"dns_ptr\": {\n                  \"type\": \"string\",\n                  \"description\": \"Reverse DNS PTR entry for the IPv4 addresses of this server.\"\n                }\n              },\n              \"required\": [\n                \"ip\",\n                \"blocked\",\n                \"dns_ptr\"\n              ],\n              \"description\": \"IP address (v4) and its reverse dns entry of this server.\"\n            },\n            \"ipv6\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"ip\": {\n                  \"type\": \"string\",\n                  \"description\": \"IP address (v4) of this server.\"\n                },\n                \"blocked\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If the IP is blocked by our anti abuse dept\"\n                },\n                \"dns_ptr\": {\n                  \"type\": [\n                    \"array\",\n                    \"null\"\n                  ],\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"ip\": {\n                        \"type\": \"string\",\n                        \"description\": \"Single IPv6 address of this server for which the reverse DNS entry has been set up.\"\n                      },\n                      \"dns_ptr\": {\n                        \"type\": \"string\",\n                        \"description\": \"DNS pointer for the specific IP address.\"\n                      }\n                    },\n                    \"required\": [\n                      \"ip\",\n                      \"dns_ptr\"\n                    ]\n                  },\n                  \"description\": \"Reverse DNS PTR entries for the IPv6 addresses of this server, `null` by default.\"\n                }\n              },\n              \"required\": [\n                \"ip\",\n                \"blocked\",\n                \"dns_ptr\"\n              ],\n              \"description\": \"IPv6 network assigned to this server and its reverse dns entry.\"\n            },\n            \"floating_ips\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"IDs of floating IPs assigned to this server.\"\n            }\n          },\n          \"required\": [\n            \"ipv4\",\n            \"ipv6\",\n            \"floating_ips\"\n          ],\n          \"description\": \"Public network information. The servers ipv4 address can be found in `public_net->ipv4->ip`\"\n        },\n        \"server_type\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the server type\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier of the server type\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the server type\"\n            },\n            \"cores\": {\n              \"type\": \"number\",\n              \"description\": \"Number of cpu cores a server of this type will have\"\n            },\n            \"memory\": {\n              \"type\": \"number\",\n              \"description\": \"Memory a server of this type will have in GB\"\n            },\n            \"disk\": {\n              \"type\": \"number\",\n              \"description\": \"Disk size a server of this type will have in GB\"\n            },\n            \"deprecated\": {\n              \"type\": \"boolean\",\n              \"description\": \"True if server type is deprecated\"\n            },\n            \"prices\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name of the location the price is for\"\n                  },\n                  \"price_hourly\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"net\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price without VAT\"\n                      },\n                      \"gross\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price with VAT added\"\n                      }\n                    },\n                    \"required\": [\n                      \"net\",\n                      \"gross\"\n                    ],\n                    \"description\": \"Hourly costs for a server type in this location\"\n                  },\n                  \"price_monthly\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"net\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price without VAT\"\n                      },\n                      \"gross\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price with VAT added\"\n                      }\n                    },\n                    \"required\": [\n                      \"net\",\n                      \"gross\"\n                    ],\n                    \"description\": \"Monthly costs for a server type in this location\"\n                  }\n                },\n                \"required\": [\n                  \"location\",\n                  \"price_hourly\",\n                  \"price_monthly\"\n                ]\n              },\n              \"description\": \"Prices in different Locations\"\n            },\n            \"storage_type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"local\",\n                \"network\"\n              ],\n              \"description\": \"Type of server boot drive. Local has higher speed. Network has better availability.\"\n            },\n            \"cpu_type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"shared\",\n                \"dedicated\"\n              ],\n              \"description\": \"Type of cpu.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"description\",\n            \"cores\",\n            \"memory\",\n            \"disk\",\n            \"deprecated\",\n            \"prices\",\n            \"storage_type\",\n            \"cpu_type\"\n          ],\n          \"description\": \"Type of server - determines how much ram, disk and cpu a server has\"\n        },\n        \"datacenter\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the datacenter\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier of the datacenter\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the datacenter\"\n            },\n            \"location\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\",\n                  \"description\": \"ID of the location\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"Unique identifier of the location\"\n                },\n                \"description\": {\n                  \"type\": \"string\",\n                  \"description\": \"Description of the location\"\n                },\n                \"country\": {\n                  \"type\": \"string\",\n                  \"description\": \"ISO 3166-1 alpha-2 code of the country the location resides in\"\n                },\n                \"city\": {\n                  \"type\": \"string\",\n                  \"description\": \"City the location is closest to\"\n                },\n                \"latitude\": {\n                  \"type\": \"number\",\n                  \"description\": \"Latitude of the city closest to the location\"\n                },\n                \"longitude\": {\n                  \"type\": \"number\",\n                  \"description\": \"Longitude of the city closest to the location\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\",\n                \"description\",\n                \"country\",\n                \"city\",\n                \"latitude\",\n                \"longitude\"\n              ],\n              \"description\": \"Location where the datacenter resides in\"\n            },\n            \"server_types\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"supported\": {\n                  \"type\": \"array\",\n                  \"items\": [\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    }\n                  ],\n                  \"description\": \"IDs of server types that are supported in the datacenter\"\n                },\n                \"available\": {\n                  \"type\": \"array\",\n                  \"items\": [\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    }\n                  ],\n                  \"description\": \"IDs of server types that are supported and for which the datacenter has enough resources left\"\n                },\n                \"available_for_migration\": {\n                  \"type\": \"array\",\n                  \"items\": [\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    }\n                  ],\n                  \"description\": \"IDs of server types that are supported and for which the datacenter has enough resources left\"\n                }\n              },\n              \"required\": [\n                \"supported\",\n                \"available\",\n                \"available_for_migration\"\n              ],\n              \"description\": \"The server types the datacenter can handle\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"description\",\n            \"location\",\n            \"server_types\"\n          ],\n          \"description\": \"Datacenter this server is located at\"\n        },\n        \"image\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the image\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"system\",\n                \"snapshot\",\n                \"backup\"\n              ],\n              \"description\": \"Type of the image\"\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"available\",\n                \"creating\"\n              ],\n              \"description\": \"Whether the image can be used or if it's still being created\"\n            },\n            \"name\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Unique identifier of the image. This value is only set for system images.\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the image\"\n            },\n            \"image_size\": {\n              \"type\": [\n                \"number\",\n                \"null\"\n              ],\n              \"description\": \"Size of the image file in our storage in GB. For snapshot images this is the value relevant for calculating costs for the image.\"\n            },\n            \"disk_size\": {\n              \"type\": \"number\",\n              \"description\": \"Size of the disk contained in the image in GB.\"\n            },\n            \"created\": {\n              \"type\": \"string\",\n              \"description\": \"Point in time when the image was created (in ISO-8601 format)\"\n            },\n            \"created_from\": {\n              \"type\": [\n                \"object\",\n                \"null\"\n              ],\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\",\n                  \"description\": \"ID of the server the image was created from\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"Server name at the time the image was created\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\"\n              ],\n              \"description\": \"Information about the server the image was created from\"\n            },\n            \"bound_to\": {\n              \"type\": [\n                \"number\",\n                \"null\"\n              ],\n              \"description\": \"ID of server the image is bound to. Only set for images of type `backup`.\"\n            },\n            \"os_flavor\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ubuntu\",\n                \"centos\",\n                \"debian\",\n                \"fedora\",\n                \"unknown\"\n              ],\n              \"description\": \"Flavor of operating system contained in the image\"\n            },\n            \"os_version\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Operating system version\"\n            },\n            \"rapid_deploy\": {\n              \"type\": \"boolean\",\n              \"description\": \"Indicates that rapid deploy of the image is available\"\n            },\n            \"protection\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"delete\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If true, prevents the snapshot from being deleted\"\n                }\n              },\n              \"required\": [\n                \"delete\"\n              ],\n              \"description\": \"Protection configuration for the image\"\n            },\n            \"deprecated\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Point in time when the image is considered to be deprecated (in ISO-8601 format)\"\n            },\n            \"labels\": {\n              \"type\": \"object\",\n              \"properties\": {},\n              \"description\": \"User-defined labels (key-value pairs)\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"type\",\n            \"status\",\n            \"name\",\n            \"description\",\n            \"image_size\",\n            \"disk_size\",\n            \"created\",\n            \"created_from\",\n            \"bound_to\",\n            \"os_flavor\",\n            \"os_version\",\n            \"protection\",\n            \"deprecated\",\n            \"labels\"\n          ],\n          \"description\": \"Image this server was created from.\"\n        },\n        \"iso\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the ISO\"\n            },\n            \"name\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Unique identifier of the ISO. Only set for public ISOs\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the ISO\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"public\",\n                \"private\"\n              ],\n              \"description\": \"Type of the ISO\"\n            },\n            \"deprecated\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to servers.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"description\",\n            \"type\",\n            \"deprecated\"\n          ],\n          \"description\": \"ISO image that is attached to this server. Null if no ISO is attached.\"\n        },\n        \"rescue_enabled\": {\n          \"type\": \"boolean\",\n          \"description\": \"True if rescue mode is enabled: Server will then boot into rescue system on next reboot.\"\n        },\n        \"locked\": {\n          \"type\": \"boolean\",\n          \"description\": \"True if server has been locked and is not available to user.\"\n        },\n        \"backup_window\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ],\n          \"description\": \"Time window (UTC) in which the backup will run, or null if the backups are not enabled\"\n        },\n        \"outgoing_traffic\": {\n          \"type\": [\n            \"number\",\n            \"null\"\n          ],\n          \"description\": \"Outbound Traffic for the current billing period in bytes\"\n        },\n        \"ingoing_traffic\": {\n          \"type\": [\n            \"number\",\n            \"null\"\n          ],\n          \"description\": \"Inbound Traffic for the current billing period in bytes\"\n        },\n        \"included_traffic\": {\n          \"type\": \"number\",\n          \"description\": \"Free Traffic for the current billing period in bytes\"\n        },\n        \"protection\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"delete\": {\n              \"type\": \"boolean\",\n              \"description\": \"If true, prevents the server from being deleted\"\n            },\n            \"rebuild\": {\n              \"type\": \"boolean\",\n              \"description\": \"If true, prevents the server from being rebuilt\"\n            }\n          },\n          \"required\": [\n            \"delete\",\n            \"rebuild\"\n          ],\n          \"description\": \"Protection configuration for the server\"\n        },\n        \"labels\": {\n          \"type\": \"object\",\n          \"properties\": {},\n          \"description\": \"User-defined labels (key-value pairs)\"\n        },\n        \"volumes\": {\n          \"type\": \"array\",\n          \"description\": \"IDs of Volumes assigned to this server.\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"status\",\n        \"created\",\n        \"public_net\",\n        \"server_type\",\n        \"datacenter\",\n        \"image\",\n        \"iso\",\n        \"rescue_enabled\",\n        \"locked\",\n        \"backup_window\",\n        \"outgoing_traffic\",\n        \"ingoing_traffic\",\n        \"included_traffic\",\n        \"protection\",\n        \"labels\"\n      ]\n    },\n    \"action\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\",\n          \"description\": \"ID of the action\"\n        },\n        \"command\": {\n          \"type\": \"string\",\n          \"description\": \"Command executed in the action\"\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"running\",\n            \"success\",\n            \"error\"\n          ],\n          \"description\": \"Status of the action\"\n        },\n        \"progress\": {\n          \"type\": \"number\",\n          \"description\": \"Progress of action in percent\"\n        },\n        \"started\": {\n          \"type\": \"string\",\n          \"description\": \"Point in time when the action was started (in ISO-8601 format)\"\n        },\n        \"finished\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ],\n          \"description\": \"Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null.\"\n        },\n        \"resources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"number\",\n                \"description\": \"ID of resource referenced\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of resource referenced\"\n              }\n            },\n            \"required\": [\n              \"id\",\n              \"type\"\n            ]\n          },\n          \"description\": \"Resources the action relates to\"\n        },\n        \"error\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"code\": {\n              \"type\": \"string\",\n              \"description\": \"Fixed machine readable code\"\n            },\n            \"message\": {\n              \"type\": \"string\",\n              \"description\": \"Humanized error message.\"\n            }\n          },\n          \"required\": [\n            \"code\",\n            \"message\"\n          ],\n          \"description\": \"Error message for the action if error occured, otherwise null.\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"command\",\n        \"status\",\n        \"progress\",\n        \"started\",\n        \"finished\",\n        \"resources\",\n        \"error\"\n      ]\n    },\n    \"next_actions\": {\n      \"type\": \"array\"\n    },\n    \"root_password\": {\n      \"type\": [\n        \"string\",\n        \"null\"\n      ],\n      \"description\": \"Root password when no SSH keys have been specified\"\n    }\n  },\n  \"required\": [\n    \"server\",\n    \"action\",\n    \"next_actions\",\n    \"root_password\"\n  ]\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Update a Server"
                  },
                  "attributes": {
                    "href": "/servers/{id}",
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": "ID of the server",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "id"
                            },
                            "value": {
                              "element": "string",
                              "content": "42"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Updates a server. You can update a server's name and a server's labels.\n\nPlease note that server names must be unique per project and valid hostnames as per RFC 1123\n(i.e. may only contain letters, digits, periods, and dashes).\n\nAlso note that when updating labels, the server's current set of labels will be replaced\nwith the labels provided in the request body. So, for example, if you want to add a new label,\nyou have to provide all existing labels plus the new label in the request body."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "PUT",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| name | string&nbsp;(optional) | New name to set |\n| labels | object&nbsp;(optional) | New labels |\n\n> #### Example curl\n ```bash\n curl -X PUT -H \"Content-Type: application/json\" -H \"Authorization: Bearer $API_TOKEN\" \\\n-d '{\"name\": \"new-name\", \"labels\": {}}' \\\nhttps://api.hetzner.cloud/v1/servers/42\n ```"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "meta": {
                                        "description": "New name to set"
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "name"
                                        },
                                        "value": {
                                          "element": "string",
                                          "content": "new-name"
                                        }
                                      }
                                    },
                                    {
                                      "element": "member",
                                      "meta": {
                                        "description": "New labels"
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "labels"
                                        },
                                        "value": {
                                          "element": "object"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"name\": \"new-name\",\n  \"labels\": {}\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"New name to set\"\n    },\n    \"labels\": {\n      \"type\": \"object\",\n      \"properties\": {},\n      \"description\": \"New labels\"\n    }\n  }\n}"
                            }
                          ]
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "200",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `server` key in the reply contains the modified server object with the new name.\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of server |\n| name | string | Server name |\n| status | string | Status of the server <br>Choices: `running`, `initializing`, `starting`, `stopping`, `off`, `deleting`, `migrating`, `rebuilding`, `unknown` |\n| created | string | Point in time when the server was created (in ISO-8601 format) |\n| public_net | object | Public network information. The servers ipv4 address can be found in `public_net->ipv4->ip` |\n| server_type | object | Type of server - determines how much ram, disk and cpu a server has |\n| datacenter | object | Datacenter this server is located at |\n| image | object,&nbsp;null | Image this server was created from. |\n| iso | object,&nbsp;null | ISO image that is attached to this server. Null if no ISO is attached. |\n| rescue_enabled | boolean | True if rescue mode is enabled: Server will then boot into rescue system on next reboot. |\n| locked | boolean | True if server has been locked and is not available to user. |\n| backup_window | string,&nbsp;null | Time window (UTC) in which the backup will run, or null if the backups are not enabled |\n| outgoing_traffic | number,&nbsp;null | Outbound Traffic for the current billing period in bytes |\n| ingoing_traffic | number,&nbsp;null | Inbound Traffic for the current billing period in bytes |\n| included_traffic | number | Free Traffic for the current billing period in bytes |\n| protection | object | Protection configuration for the server |\n| labels | object | User-defined labels (key-value pairs) |\n| volumes | array | IDs of Volumes assigned to this server. |"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "server"
                                        },
                                        "value": {
                                          "element": "Server",
                                          "content": [
                                            {
                                              "element": "member",
                                              "meta": {
                                                "description": "Server name"
                                              },
                                              "content": {
                                                "key": {
                                                  "element": "string",
                                                  "content": "name"
                                                },
                                                "value": {
                                                  "element": "string",
                                                  "content": "new-name"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"server\": {\n    \"id\": 42,\n    \"name\": \"new-name\",\n    \"status\": \"running\",\n    \"created\": \"2016-01-30T23:50+00:00\",\n    \"public_net\": {\n      \"ipv4\": {\n        \"ip\": \"1.2.3.4\",\n        \"blocked\": false,\n        \"dns_ptr\": \"server01.example.com\"\n      },\n      \"ipv6\": {\n        \"ip\": \"2001:db8::/64\",\n        \"blocked\": false,\n        \"dns_ptr\": [\n          {\n            \"ip\": \"2001:db8::1\",\n            \"dns_ptr\": \"server.example.com\"\n          }\n        ]\n      },\n      \"floating_ips\": [\n        478\n      ]\n    },\n    \"server_type\": {\n      \"id\": 1,\n      \"name\": \"cx11\",\n      \"description\": \"CX11\",\n      \"cores\": 1,\n      \"memory\": 1,\n      \"disk\": 25,\n      \"deprecated\": true,\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"net\": \"1.0000000000\",\n            \"gross\": \"1.1900000000000000\"\n          },\n          \"price_monthly\": {\n            \"net\": \"1.0000000000\",\n            \"gross\": \"1.1900000000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"local\",\n      \"cpu_type\": \"shared\"\n    },\n    \"datacenter\": {\n      \"id\": 1,\n      \"name\": \"fsn1-dc8\",\n      \"description\": \"Falkenstein 1 DC 8\",\n      \"location\": {\n        \"id\": 1,\n        \"name\": \"fsn1\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"country\": \"DE\",\n        \"city\": \"Falkenstein\",\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071\n      },\n      \"server_types\": {\n        \"supported\": [\n          1,\n          2,\n          3\n        ],\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"image\": {\n      \"id\": 4711,\n      \"type\": \"snapshot\",\n      \"status\": \"available\",\n      \"name\": \"ubuntu-16.04\",\n      \"description\": \"Ubuntu 16.04 Standard 64 bit\",\n      \"image_size\": 2.3,\n      \"disk_size\": 10,\n      \"created\": \"2016-01-30T23:50+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"bound_to\": null,\n      \"os_flavor\": \"ubuntu\",\n      \"os_version\": \"16.04\",\n      \"rapid_deploy\": false,\n      \"protection\": {\n        \"delete\": false\n      },\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"labels\": {}\n    },\n    \"iso\": {\n      \"id\": 4711,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"type\": \"public\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\"\n    },\n    \"rescue_enabled\": false,\n    \"locked\": false,\n    \"backup_window\": \"22-02\",\n    \"outgoing_traffic\": 123456,\n    \"ingoing_traffic\": 123456,\n    \"included_traffic\": 654321,\n    \"protection\": {\n      \"delete\": false,\n      \"rebuild\": false\n    },\n    \"labels\": {},\n    \"volumes\": []\n  }\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"server\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\",\n          \"description\": \"ID of server\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Server name\"\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"running\",\n            \"initializing\",\n            \"starting\",\n            \"stopping\",\n            \"off\",\n            \"deleting\",\n            \"migrating\",\n            \"rebuilding\",\n            \"unknown\"\n          ],\n          \"description\": \"Status of the server\"\n        },\n        \"created\": {\n          \"type\": \"string\",\n          \"description\": \"Point in time when the server was created (in ISO-8601 format)\"\n        },\n        \"public_net\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"ipv4\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"ip\": {\n                  \"type\": \"string\",\n                  \"description\": \"IP address (v4) of this server.\"\n                },\n                \"blocked\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If the IP is blocked by our anti abuse dept\"\n                },\n                \"dns_ptr\": {\n                  \"type\": \"string\",\n                  \"description\": \"Reverse DNS PTR entry for the IPv4 addresses of this server.\"\n                }\n              },\n              \"required\": [\n                \"ip\",\n                \"blocked\",\n                \"dns_ptr\"\n              ],\n              \"description\": \"IP address (v4) and its reverse dns entry of this server.\"\n            },\n            \"ipv6\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"ip\": {\n                  \"type\": \"string\",\n                  \"description\": \"IP address (v4) of this server.\"\n                },\n                \"blocked\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If the IP is blocked by our anti abuse dept\"\n                },\n                \"dns_ptr\": {\n                  \"type\": [\n                    \"array\",\n                    \"null\"\n                  ],\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"ip\": {\n                        \"type\": \"string\",\n                        \"description\": \"Single IPv6 address of this server for which the reverse DNS entry has been set up.\"\n                      },\n                      \"dns_ptr\": {\n                        \"type\": \"string\",\n                        \"description\": \"DNS pointer for the specific IP address.\"\n                      }\n                    },\n                    \"required\": [\n                      \"ip\",\n                      \"dns_ptr\"\n                    ]\n                  },\n                  \"description\": \"Reverse DNS PTR entries for the IPv6 addresses of this server, `null` by default.\"\n                }\n              },\n              \"required\": [\n                \"ip\",\n                \"blocked\",\n                \"dns_ptr\"\n              ],\n              \"description\": \"IPv6 network assigned to this server and its reverse dns entry.\"\n            },\n            \"floating_ips\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"number\"\n              },\n              \"description\": \"IDs of floating IPs assigned to this server.\"\n            }\n          },\n          \"required\": [\n            \"ipv4\",\n            \"ipv6\",\n            \"floating_ips\"\n          ],\n          \"description\": \"Public network information. The servers ipv4 address can be found in `public_net->ipv4->ip`\"\n        },\n        \"server_type\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the server type\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier of the server type\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the server type\"\n            },\n            \"cores\": {\n              \"type\": \"number\",\n              \"description\": \"Number of cpu cores a server of this type will have\"\n            },\n            \"memory\": {\n              \"type\": \"number\",\n              \"description\": \"Memory a server of this type will have in GB\"\n            },\n            \"disk\": {\n              \"type\": \"number\",\n              \"description\": \"Disk size a server of this type will have in GB\"\n            },\n            \"deprecated\": {\n              \"type\": \"boolean\",\n              \"description\": \"True if server type is deprecated\"\n            },\n            \"prices\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name of the location the price is for\"\n                  },\n                  \"price_hourly\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"net\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price without VAT\"\n                      },\n                      \"gross\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price with VAT added\"\n                      }\n                    },\n                    \"required\": [\n                      \"net\",\n                      \"gross\"\n                    ],\n                    \"description\": \"Hourly costs for a server type in this location\"\n                  },\n                  \"price_monthly\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"net\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price without VAT\"\n                      },\n                      \"gross\": {\n                        \"type\": \"string\",\n                        \"description\": \"Price with VAT added\"\n                      }\n                    },\n                    \"required\": [\n                      \"net\",\n                      \"gross\"\n                    ],\n                    \"description\": \"Monthly costs for a server type in this location\"\n                  }\n                },\n                \"required\": [\n                  \"location\",\n                  \"price_hourly\",\n                  \"price_monthly\"\n                ]\n              },\n              \"description\": \"Prices in different Locations\"\n            },\n            \"storage_type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"local\",\n                \"network\"\n              ],\n              \"description\": \"Type of server boot drive. Local has higher speed. Network has better availability.\"\n            },\n            \"cpu_type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"shared\",\n                \"dedicated\"\n              ],\n              \"description\": \"Type of cpu.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"description\",\n            \"cores\",\n            \"memory\",\n            \"disk\",\n            \"deprecated\",\n            \"prices\",\n            \"storage_type\",\n            \"cpu_type\"\n          ],\n          \"description\": \"Type of server - determines how much ram, disk and cpu a server has\"\n        },\n        \"datacenter\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the datacenter\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier of the datacenter\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the datacenter\"\n            },\n            \"location\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\",\n                  \"description\": \"ID of the location\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"Unique identifier of the location\"\n                },\n                \"description\": {\n                  \"type\": \"string\",\n                  \"description\": \"Description of the location\"\n                },\n                \"country\": {\n                  \"type\": \"string\",\n                  \"description\": \"ISO 3166-1 alpha-2 code of the country the location resides in\"\n                },\n                \"city\": {\n                  \"type\": \"string\",\n                  \"description\": \"City the location is closest to\"\n                },\n                \"latitude\": {\n                  \"type\": \"number\",\n                  \"description\": \"Latitude of the city closest to the location\"\n                },\n                \"longitude\": {\n                  \"type\": \"number\",\n                  \"description\": \"Longitude of the city closest to the location\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\",\n                \"description\",\n                \"country\",\n                \"city\",\n                \"latitude\",\n                \"longitude\"\n              ],\n              \"description\": \"Location where the datacenter resides in\"\n            },\n            \"server_types\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"supported\": {\n                  \"type\": \"array\",\n                  \"items\": [\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    }\n                  ],\n                  \"description\": \"IDs of server types that are supported in the datacenter\"\n                },\n                \"available\": {\n                  \"type\": \"array\",\n                  \"items\": [\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    }\n                  ],\n                  \"description\": \"IDs of server types that are supported and for which the datacenter has enough resources left\"\n                },\n                \"available_for_migration\": {\n                  \"type\": \"array\",\n                  \"items\": [\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"number\"\n                    }\n                  ],\n                  \"description\": \"IDs of server types that are supported and for which the datacenter has enough resources left\"\n                }\n              },\n              \"required\": [\n                \"supported\",\n                \"available\",\n                \"available_for_migration\"\n              ],\n              \"description\": \"The server types the datacenter can handle\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"description\",\n            \"location\",\n            \"server_types\"\n          ],\n          \"description\": \"Datacenter this server is located at\"\n        },\n        \"image\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the image\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"system\",\n                \"snapshot\",\n                \"backup\"\n              ],\n              \"description\": \"Type of the image\"\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"available\",\n                \"creating\"\n              ],\n              \"description\": \"Whether the image can be used or if it's still being created\"\n            },\n            \"name\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Unique identifier of the image. This value is only set for system images.\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the image\"\n            },\n            \"image_size\": {\n              \"type\": [\n                \"number\",\n                \"null\"\n              ],\n              \"description\": \"Size of the image file in our storage in GB. For snapshot images this is the value relevant for calculating costs for the image.\"\n            },\n            \"disk_size\": {\n              \"type\": \"number\",\n              \"description\": \"Size of the disk contained in the image in GB.\"\n            },\n            \"created\": {\n              \"type\": \"string\",\n              \"description\": \"Point in time when the image was created (in ISO-8601 format)\"\n            },\n            \"created_from\": {\n              \"type\": [\n                \"object\",\n                \"null\"\n              ],\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\",\n                  \"description\": \"ID of the server the image was created from\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"Server name at the time the image was created\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\"\n              ],\n              \"description\": \"Information about the server the image was created from\"\n            },\n            \"bound_to\": {\n              \"type\": [\n                \"number\",\n                \"null\"\n              ],\n              \"description\": \"ID of server the image is bound to. Only set for images of type `backup`.\"\n            },\n            \"os_flavor\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ubuntu\",\n                \"centos\",\n                \"debian\",\n                \"fedora\",\n                \"unknown\"\n              ],\n              \"description\": \"Flavor of operating system contained in the image\"\n            },\n            \"os_version\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Operating system version\"\n            },\n            \"rapid_deploy\": {\n              \"type\": \"boolean\",\n              \"description\": \"Indicates that rapid deploy of the image is available\"\n            },\n            \"protection\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"delete\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If true, prevents the snapshot from being deleted\"\n                }\n              },\n              \"required\": [\n                \"delete\"\n              ],\n              \"description\": \"Protection configuration for the image\"\n            },\n            \"deprecated\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Point in time when the image is considered to be deprecated (in ISO-8601 format)\"\n            },\n            \"labels\": {\n              \"type\": \"object\",\n              \"properties\": {},\n              \"description\": \"User-defined labels (key-value pairs)\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"type\",\n            \"status\",\n            \"name\",\n            \"description\",\n            \"image_size\",\n            \"disk_size\",\n            \"created\",\n            \"created_from\",\n            \"bound_to\",\n            \"os_flavor\",\n            \"os_version\",\n            \"protection\",\n            \"deprecated\",\n            \"labels\"\n          ],\n          \"description\": \"Image this server was created from.\"\n        },\n        \"iso\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\",\n              \"description\": \"ID of the ISO\"\n            },\n            \"name\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"Unique identifier of the ISO. Only set for public ISOs\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the ISO\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"public\",\n                \"private\"\n              ],\n              \"description\": \"Type of the ISO\"\n            },\n            \"deprecated\": {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\": \"ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to servers.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"description\",\n            \"type\",\n            \"deprecated\"\n          ],\n          \"description\": \"ISO image that is attached to this server. Null if no ISO is attached.\"\n        },\n        \"rescue_enabled\": {\n          \"type\": \"boolean\",\n          \"description\": \"True if rescue mode is enabled: Server will then boot into rescue system on next reboot.\"\n        },\n        \"locked\": {\n          \"type\": \"boolean\",\n          \"description\": \"True if server has been locked and is not available to user.\"\n        },\n        \"backup_window\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ],\n          \"description\": \"Time window (UTC) in which the backup will run, or null if the backups are not enabled\"\n        },\n        \"outgoing_traffic\": {\n          \"type\": [\n            \"number\",\n            \"null\"\n          ],\n          \"description\": \"Outbound Traffic for the current billing period in bytes\"\n        },\n        \"ingoing_traffic\": {\n          \"type\": [\n            \"number\",\n            \"null\"\n          ],\n          \"description\": \"Inbound Traffic for the current billing period in bytes\"\n        },\n        \"included_traffic\": {\n          \"type\": \"number\",\n          \"description\": \"Free Traffic for the current billing period in bytes\"\n        },\n        \"protection\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"delete\": {\n              \"type\": \"boolean\",\n              \"description\": \"If true, prevents the server from being deleted\"\n            },\n            \"rebuild\": {\n              \"type\": \"boolean\",\n              \"description\": \"If true, prevents the server from being rebuilt\"\n            }\n          },\n          \"required\": [\n            \"delete\",\n            \"rebuild\"\n          ],\n          \"description\": \"Protection configuration for the server\"\n        },\n        \"labels\": {\n          \"type\": \"object\",\n          \"properties\": {},\n          \"description\": \"User-defined labels (key-value pairs)\"\n        },\n        \"volumes\": {\n          \"type\": \"array\",\n          \"description\": \"IDs of Volumes assigned to this server.\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"status\",\n        \"created\",\n        \"public_net\",\n        \"server_type\",\n        \"datacenter\",\n        \"image\",\n        \"iso\",\n        \"rescue_enabled\",\n        \"locked\",\n        \"backup_window\",\n        \"outgoing_traffic\",\n        \"ingoing_traffic\",\n        \"included_traffic\",\n        \"protection\",\n        \"labels\"\n      ]\n    }\n  },\n  \"required\": [\n    \"server\"\n  ]\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Delete a Server"
                  },
                  "attributes": {
                    "href": "/servers/{id}",
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": "ID of the server",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "id"
                            },
                            "value": {
                              "element": "string",
                              "content": "42"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Deletes a server. This immediately removes the server from your account, and it is no longer accessible."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "DELETE"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "200",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `action` key in the reply contains an action object with this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of the action |\n| command | string | Command executed in the action |\n| status | string | Status of the action <br>Choices: `running`, `success`, `error` |\n| progress | number | Progress of action in percent |\n| started | string | Point in time when the action was started (in ISO-8601 format) |\n| finished | string,&nbsp;null | Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null. |\n| resources | array | Resources the action relates to |\n| error | object,&nbsp;null | Error message for the action if error occured, otherwise null. |\n\n> #### Example curl\n ```bash\n curl -X DELETE -H \"Content-Type: application/json\" -H \"Authorization: Bearer $API_TOKEN\" \\\nhttps://api.hetzner.cloud/v1/servers/42\n ```"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "action"
                                        },
                                        "value": {
                                          "element": "ActionRunning",
                                          "content": [
                                            {
                                              "element": "member",
                                              "content": {
                                                "key": {
                                                  "element": "string",
                                                  "content": "command"
                                                },
                                                "value": {
                                                  "element": "string",
                                                  "content": "delete_server"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"action\": {\n    \"id\": 13,\n    \"command\": \"delete_server\",\n    \"status\": \"running\",\n    \"progress\": 0,\n    \"started\": \"2016-01-30T23:50+00:00\",\n    \"finished\": null,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    }\n  }\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"action\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\",\n          \"description\": \"ID of the action\"\n        },\n        \"command\": {\n          \"type\": \"string\",\n          \"description\": \"Command executed in the action\"\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"running\",\n            \"success\",\n            \"error\"\n          ],\n          \"description\": \"Status of the action\"\n        },\n        \"progress\": {\n          \"type\": \"number\",\n          \"description\": \"Progress of action in percent\"\n        },\n        \"started\": {\n          \"type\": \"string\",\n          \"description\": \"Point in time when the action was started (in ISO-8601 format)\"\n        },\n        \"finished\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ],\n          \"description\": \"Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null.\"\n        },\n        \"resources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"number\",\n                \"description\": \"ID of resource referenced\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of resource referenced\"\n              }\n            },\n            \"required\": [\n              \"id\",\n              \"type\"\n            ]\n          },\n          \"description\": \"Resources the action relates to\"\n        },\n        \"error\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"code\": {\n              \"type\": \"string\",\n              \"description\": \"Fixed machine readable code\"\n            },\n            \"message\": {\n              \"type\": \"string\",\n              \"description\": \"Humanized error message.\"\n            }\n          },\n          \"required\": [\n            \"code\",\n            \"message\"\n          ],\n          \"description\": \"Error message for the action if error occured, otherwise null.\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"command\",\n        \"status\",\n        \"progress\",\n        \"started\",\n        \"finished\",\n        \"resources\",\n        \"error\"\n      ]\n    }\n  },\n  \"required\": [\n    \"action\"\n  ]\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Get Metrics for a Server"
                  },
                  "attributes": {
                    "href": "/servers/{id}/metrics{?type,start,end,step}",
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": "ID of the server",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "id"
                            },
                            "value": {
                              "element": "string",
                              "content": "42"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": "Type of metrics to get\n\n+ `cpu`\n\n+ `disk`\n\n+ `network`",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "string",
                              "content": "cpu"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": "Start of period to get Metrics for (in ISO-8601 format)",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "start"
                            },
                            "value": {
                              "element": "string",
                              "content": "2017-01-01T00:00:00Z"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": "End of period to get Metrics for (in ISO-8601 format)",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "end"
                            },
                            "value": {
                              "element": "string",
                              "content": "2017-01-01T23:00:00Z"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": "Resolution of results in seconds",
                            "title": "number"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "optional"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "step"
                            },
                            "value": {
                              "element": "string",
                              "content": "60"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Get Metrics for specified server.\n\nYou must specify the type of metric to get: `cpu`, `disk` or `network`. You can also specify more than one type by comma separation, e.g. `cpu,disk`.\n\nDepending on the type you will get different time series data:\n\n|Type | Timeseries | Unit | Description |\n|---- |------------|------|-------------|\n|cpu|cpu | percent | Percent CPU usage |\n|disk|disk.0.iops.read | iop/s | Number of read IO operations per second|\n||disk.0.iops.write | iop/s | Number of write IO operations per second|\n||disk.0.bandwidth.read |bytes/s |Bytes read per second|\n||disk.0.bandwidth.write | bytes/s | Bytes written per second |\n|network|network.0.pps.<span>in</span>| packets/s | Public Network interface packets per second received|\n||network.0.pps.out | packets/s | Public Network interface packets per second sent|\n||network.0.bandwidth.<span>in</span> | bytes/s | Public Network interface bytes/s received|\n||network.0.bandwidth.out | bytes/s | Public Network interface bytes/s sent|\n\nMetrics are available for the last 30 days only.\n\nIf you do not provide the step argument we will automatically adjust it so that a maximum of 100 samples are returned.\n\nWe limit the number of samples returned to a maximum of 500 and will adjust the step parameter accordingly."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "200",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `metrics` key in the reply contains a metrics object with this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| start | string | Start of period of metrics reported (in ISO-8601 format) |\n| end | string | End of period of metrics reported (in ISO-8601 format) |\n| step | number | Resolution of results in seconds. |\n| time_series | object | Hash with timeseries information, containing the name of timeseries as key |\n\n> #### Example curl\n ```bash\n curl -H \"Authorization: Bearer $API_TOKEN\" \\\nhttps://api.hetzner.cloud/v1/servers/42/metrics?type=cpu&start=2017-01-01T00:00:00Z&end=2017-01-01T23:00:00Z\n ```\n\nThe `time_series` key in the returned metrics object is a hash with one key per series returned with this structure:\n\n```\n\"time_series\": {\n    \"name_of_timeseries\": {\n        \"values\": [\n          [\n            1435781470.622,\n            \"42\"\n          ],\n          [\n            1435781471.622,\n            \"43\"\n          ]\n        ]\n    }\n}\n```\n\nContrary to the example on the right the timestamp is a number and not a string."
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "metrics"
                                        },
                                        "value": {
                                          "element": "Metrics Generic"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"metrics\": {\n    \"start\": \"2017-01-01T00:00:00+00:00\",\n    \"end\": \"2017-01-01T23:00:00+00:00\",\n    \"step\": 60,\n    \"time_series\": {\n      \"name_of_timeseries\": {\n        \"values\": [\n          [\n            \"1435781470.622\",\n            \"42\"\n          ]\n        ]\n      }\n    }\n  }\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"metrics\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"start\": {\n          \"type\": \"string\",\n          \"description\": \"Start of period of metrics reported (in ISO-8601 format)\"\n        },\n        \"end\": {\n          \"type\": \"string\",\n          \"description\": \"End of period of metrics reported (in ISO-8601 format)\"\n        },\n        \"step\": {\n          \"type\": \"number\",\n          \"description\": \"Resolution of results in seconds.\"\n        },\n        \"time_series\": {\n          \"$ref\": \"#/definitions/name_of_timeseries\",\n          \"required\": [\n            \"name_of_timeseries\"\n          ],\n          \"description\": \"Hash with timeseries information, containing the name of timeseries as key\"\n        }\n      },\n      \"required\": [\n        \"start\",\n        \"end\",\n        \"step\",\n        \"time_series\"\n      ]\n    }\n  },\n  \"required\": [\n    \"metrics\"\n  ],\n  \"definitions\": {\n    \"name_of_timeseries\": {\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"values\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"array\"\n              },\n              \"description\": \"Metrics Timestamps with values\"\n            }\n          },\n          \"required\": [\n            \"values\"\n          ]\n        }\n      }\n    }\n  }\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "element": "resource",
              "meta": {
                "title": "Server Actions"
              },
              "attributes": {
                "href": "/servers/{id}/actions"
              },
              "content": [
                {
                  "element": "transition",
                  "meta": {
                    "title": "Get all Actions for a Server"
                  },
                  "attributes": {
                    "href": "/servers/{id}/actions{?status,sort}",
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": "ID of the server",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "id"
                            },
                            "value": {
                              "element": "string",
                              "content": "42"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": "Can be used multiple times. Response will have only actions with specified statuses.",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "optional"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "status"
                            },
                            "value": {
                              "element": "enum",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "running"
                                },
                                {
                                  "element": "string",
                                  "content": "success"
                                },
                                {
                                  "element": "string",
                                  "content": "error"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": "Can be used multiple times.",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "optional"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "sort"
                            },
                            "value": {
                              "element": "enum",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "id"
                                },
                                {
                                  "element": "string",
                                  "content": "id:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "id:desc"
                                },
                                {
                                  "element": "string",
                                  "content": "command"
                                },
                                {
                                  "element": "string",
                                  "content": "command:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "command:desc"
                                },
                                {
                                  "element": "string",
                                  "content": "status"
                                },
                                {
                                  "element": "string",
                                  "content": "status:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "status:desc"
                                },
                                {
                                  "element": "string",
                                  "content": "progress"
                                },
                                {
                                  "element": "string",
                                  "content": "progress:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "progress:desc"
                                },
                                {
                                  "element": "string",
                                  "content": "started"
                                },
                                {
                                  "element": "string",
                                  "content": "started:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "started:desc"
                                },
                                {
                                  "element": "string",
                                  "content": "finished"
                                },
                                {
                                  "element": "string",
                                  "content": "finished:asc"
                                },
                                {
                                  "element": "string",
                                  "content": "finished:desc"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Returns all action objects for a server."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "200",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `actions` key in the reply contains an array of action objects with this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of the action |\n| command | string | Command executed in the action |\n| status | string | Status of the action <br>Choices: `success`, `running`, `error` |\n| progress | number | Progress of action in percent |\n| started | string | Point in time when the action was started (in ISO-8601 format) |\n| finished | string,&nbsp;null | Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null. |\n| resources | array | Resources the action relates to |\n| error | object,&nbsp;null | Error message for the action if error occured, otherwise null. |\n\n> #### Example curl\n ```bash\n curl -H \"Authorization: Bearer $API_TOKEN\" \\\nhttps://api.hetzner.cloud/v1/servers/42/actions\n ```"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required",
                                          "fixedType"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "actions"
                                        },
                                        "value": {
                                          "element": "array",
                                          "content": [
                                            {
                                              "element": "Action"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"actions\": [\n    {\n      \"id\": 13,\n      \"command\": \"start_server\",\n      \"status\": \"success\",\n      \"progress\": 100,\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"finished\": \"2016-01-30T23:56:00+00:00\",\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      }\n    }\n  ]\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"actions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\",\n            \"description\": \"ID of the action\"\n          },\n          \"command\": {\n            \"type\": \"string\",\n            \"description\": \"Command executed in the action\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"success\",\n              \"running\",\n              \"error\"\n            ],\n            \"description\": \"Status of the action\"\n          },\n          \"progress\": {\n            \"type\": \"number\",\n            \"description\": \"Progress of action in percent\"\n          },\n          \"started\": {\n            \"type\": \"string\",\n            \"description\": \"Point in time when the action was started (in ISO-8601 format)\"\n          },\n          \"finished\": {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ],\n            \"description\": \"Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null.\"\n          },\n          \"resources\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\",\n                  \"description\": \"ID of resource referenced\"\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"description\": \"Type of resource referenced\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"type\"\n              ]\n            },\n            \"description\": \"Resources the action relates to\"\n          },\n          \"error\": {\n            \"type\": [\n              \"object\",\n              \"null\"\n            ],\n            \"properties\": {\n              \"code\": {\n                \"type\": \"string\",\n                \"description\": \"Fixed machine readable code\"\n              },\n              \"message\": {\n                \"type\": \"string\",\n                \"description\": \"Humanized error message.\"\n              }\n            },\n            \"required\": [\n              \"code\",\n              \"message\"\n            ],\n            \"description\": \"Error message for the action if error occured, otherwise null.\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"command\",\n          \"status\",\n          \"progress\",\n          \"started\",\n          \"finished\",\n          \"resources\",\n          \"error\"\n        ]\n      }\n    }\n  },\n  \"required\": [\n    \"actions\"\n  ]\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Get a specific Action for a Server"
                  },
                  "attributes": {
                    "href": "/servers/{id}/actions/{action_id}",
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": "ID of the server",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "id"
                            },
                            "value": {
                              "element": "string",
                              "content": "42"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": "ID of the action",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "action_id"
                            },
                            "value": {
                              "element": "string",
                              "content": "1337"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Returns a specific action object for a Server."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "GET"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "200",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `action` key in the reply has this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of the action |\n| command | string | Command executed in the action |\n| status | string | Status of the action <br>Choices: `success`, `running`, `error` |\n| progress | number | Progress of action in percent |\n| started | string | Point in time when the action was started (in ISO-8601 format) |\n| finished | string,&nbsp;null | Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null. |\n| resources | array | Resources the action relates to |\n| error | object,&nbsp;null | Error message for the action if error occured, otherwise null. |\n\n> #### Example curl\n ```bash\n curl -H \"Authorization: Bearer $API_TOKEN\" \\\nhttps://api.hetzner.cloud/v1/servers/42/actions/1337\n ```"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "action"
                                        },
                                        "value": {
                                          "element": "Action"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"action\": {\n    \"id\": 13,\n    \"command\": \"start_server\",\n    \"status\": \"success\",\n    \"progress\": 100,\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"finished\": \"2016-01-30T23:56:00+00:00\",\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    }\n  }\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"action\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\",\n          \"description\": \"ID of the action\"\n        },\n        \"command\": {\n          \"type\": \"string\",\n          \"description\": \"Command executed in the action\"\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"success\",\n            \"running\",\n            \"error\"\n          ],\n          \"description\": \"Status of the action\"\n        },\n        \"progress\": {\n          \"type\": \"number\",\n          \"description\": \"Progress of action in percent\"\n        },\n        \"started\": {\n          \"type\": \"string\",\n          \"description\": \"Point in time when the action was started (in ISO-8601 format)\"\n        },\n        \"finished\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ],\n          \"description\": \"Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null.\"\n        },\n        \"resources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"number\",\n                \"description\": \"ID of resource referenced\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of resource referenced\"\n              }\n            },\n            \"required\": [\n              \"id\",\n              \"type\"\n            ]\n          },\n          \"description\": \"Resources the action relates to\"\n        },\n        \"error\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"code\": {\n              \"type\": \"string\",\n              \"description\": \"Fixed machine readable code\"\n            },\n            \"message\": {\n              \"type\": \"string\",\n              \"description\": \"Humanized error message.\"\n            }\n          },\n          \"required\": [\n            \"code\",\n            \"message\"\n          ],\n          \"description\": \"Error message for the action if error occured, otherwise null.\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"command\",\n        \"status\",\n        \"progress\",\n        \"started\",\n        \"finished\",\n        \"resources\",\n        \"error\"\n      ]\n    }\n  },\n  \"required\": [\n    \"action\"\n  ]\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Power on a Server"
                  },
                  "attributes": {
                    "href": "/servers/{id}/actions/poweron",
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": "ID of the server",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "id"
                            },
                            "value": {
                              "element": "string",
                              "content": "42"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Starts a server by turning its power on."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "POST"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "201",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `action` key in the reply contains an action object with this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of the action |\n| command | string | Command executed in the action |\n| status | string | Status of the action <br>Choices: `running`, `success`, `error` |\n| progress | number | Progress of action in percent |\n| started | string | Point in time when the action was started (in ISO-8601 format) |\n| finished | string,&nbsp;null | Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null. |\n| resources | array | Resources the action relates to |\n| error | object,&nbsp;null | Error message for the action if error occured, otherwise null. |\n\n> #### Example curl\n ```bash\n curl -X POST -H \"Content-Type: application/json\" -H \"Authorization: Bearer $API_TOKEN\" \\\nhttps://api.hetzner.cloud/v1/servers/42/actions/poweron\n ```"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "action"
                                        },
                                        "value": {
                                          "element": "ActionRunning",
                                          "content": [
                                            {
                                              "element": "member",
                                              "content": {
                                                "key": {
                                                  "element": "string",
                                                  "content": "command"
                                                },
                                                "value": {
                                                  "element": "string",
                                                  "content": "start_server"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"action\": {\n    \"id\": 13,\n    \"command\": \"start_server\",\n    \"status\": \"running\",\n    \"progress\": 0,\n    \"started\": \"2016-01-30T23:50+00:00\",\n    \"finished\": null,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    }\n  }\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"action\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\",\n          \"description\": \"ID of the action\"\n        },\n        \"command\": {\n          \"type\": \"string\",\n          \"description\": \"Command executed in the action\"\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"running\",\n            \"success\",\n            \"error\"\n          ],\n          \"description\": \"Status of the action\"\n        },\n        \"progress\": {\n          \"type\": \"number\",\n          \"description\": \"Progress of action in percent\"\n        },\n        \"started\": {\n          \"type\": \"string\",\n          \"description\": \"Point in time when the action was started (in ISO-8601 format)\"\n        },\n        \"finished\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ],\n          \"description\": \"Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null.\"\n        },\n        \"resources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"number\",\n                \"description\": \"ID of resource referenced\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of resource referenced\"\n              }\n            },\n            \"required\": [\n              \"id\",\n              \"type\"\n            ]\n          },\n          \"description\": \"Resources the action relates to\"\n        },\n        \"error\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"code\": {\n              \"type\": \"string\",\n              \"description\": \"Fixed machine readable code\"\n            },\n            \"message\": {\n              \"type\": \"string\",\n              \"description\": \"Humanized error message.\"\n            }\n          },\n          \"required\": [\n            \"code\",\n            \"message\"\n          ],\n          \"description\": \"Error message for the action if error occured, otherwise null.\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"command\",\n        \"status\",\n        \"progress\",\n        \"started\",\n        \"finished\",\n        \"resources\",\n        \"error\"\n      ]\n    }\n  },\n  \"required\": [\n    \"action\"\n  ]\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": "Soft-reboot a Server"
                  },
                  "attributes": {
                    "href": "/servers/{id}/actions/reboot",
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": "ID of the server",
                            "title": "string"
                          },
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "id"
                            },
                            "value": {
                              "element": "string",
                              "content": "42"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Reboots a server gracefully by sending an ACPI request. The server operating system must\nsupport ACPI and react to the request, otherwise the server will not reboot."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": "POST"
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": "201",
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "copy",
                              "content": "The `action` key in the reply contains an action object with this structure:\n\n| Parameter | Type | Description |\n|-------------|-------------|-------------|\n| id | number | ID of the action |\n| command | string | Command executed in the action |\n| status | string | Status of the action <br>Choices: `running`, `success`, `error` |\n| progress | number | Progress of action in percent |\n| started | string | Point in time when the action was started (in ISO-8601 format) |\n| finished | string,&nbsp;null | Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null. |\n| resources | array | Resources the action relates to |\n| error | object,&nbsp;null | Error message for the action if error occured, otherwise null. |\n\n> #### Example curl\n ```bash\n curl -X POST -H \"Content-Type: application/json\" -H \"Authorization: Bearer $API_TOKEN\" \\\nhttps://api.hetzner.cloud/v1/servers/42/actions/reboot\n ```"
                            },
                            {
                              "element": "dataStructure",
                              "content": [
                                {
                                  "element": "object",
                                  "content": [
                                    {
                                      "element": "member",
                                      "attributes": {
                                        "typeAttributes": [
                                          "required"
                                        ]
                                      },
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "action"
                                        },
                                        "value": {
                                          "element": "ActionRunning",
                                          "content": [
                                            {
                                              "element": "member",
                                              "content": {
                                                "key": {
                                                  "element": "string",
                                                  "content": "command"
                                                },
                                                "value": {
                                                  "element": "string",
                                                  "content": "reboot_server"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBody"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/json"
                              },
                              "content": "{\n  \"action\": {\n    \"id\": 13,\n    \"command\": \"reboot_server\",\n    \"status\": \"running\",\n    \"progress\": 0,\n    \"started\": \"2016-01-30T23:50+00:00\",\n    \"finished\": null,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    }\n  }\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": [
                                  "messageBodySchema"
                                ]
                              },
                              "attributes": {
                                "contentType": "application/schema+json"
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"action\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\",\n          \"description\": \"ID of the action\"\n        },\n        \"command\": {\n          \"type\": \"string\",\n          \"description\": \"Command executed in the action\"\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"running\",\n            \"success\",\n            \"error\"\n          ],\n          \"description\": \"Status of the action\"\n        },\n        \"progress\": {\n          \"type\": \"number\",\n          \"description\": \"Progress of action in percent\"\n        },\n        \"started\": {\n          \"type\": \"string\",\n          \"description\": \"Point in time when the action was started (in ISO-8601 format)\"\n        },\n        \"finished\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ],\n          \"description\": \"Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null.\"\n        },\n        \"resources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"number\",\n                \"description\": \"ID of resource referenced\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of resource referenced\"\n              }\n            },\n            \"required\": [\n              \"id\",\n              \"type\"\n            ]\n          },\n          \"description\": \"Resources the action relates to\"\n        },\n        \"error\": {\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"code\": {\n              \"type\": \"string\",\n              \"description\": \"Fixed machine readable code\"\n            },\n            \"message\": {\n              \"type\": \"string\",\n              \"description\": \"Humanized error message.\"\n            }\n          },\n          \"required\": [\n            \"code\",\n            \"message\"\n          ],\n          \"description\": \"Error message for the action if error occured, otherwise null.\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"command\",\n        \"status\",\n        \"progress\",\n        \"started\",\n        \"finished\",\n        \"resources\",\n        \"error\"\n      ]\n    }\n  },\n  \"required\": [\n    \"action\"\n  ]\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "element": "category",
          "meta": {
            "classes": [
              "dataStructures"
            ]
          },
          "content": [
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "SSHKey"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the SSH key"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 2323
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Name of the SSH key (must be unique per project)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "My ssh key"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Fingerprint of public key"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "fingerprint"
                        },
                        "value": {
                          "element": "string",
                          "content": "b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Public key"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "public_key"
                        },
                        "value": {
                          "element": "string",
                          "content": "ssh-rsa AAAjjk76kgf...Xt"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "User-defined labels (key-value pairs)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "labels"
                        },
                        "value": {
                          "element": "object"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "Server create"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Name of the server to create (must be unique per project and a valid hostname as per RFC 1123)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "my-server"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID or name of the server type this server should be created with"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "server_type"
                        },
                        "value": {
                          "element": "string",
                          "content": "cx11"
                        }
                      }
                    },
                    {
                      "element": "select",
                      "content": [
                        {
                          "element": "option",
                          "content": [
                            {
                              "element": "member",
                              "meta": {
                                "description": "ID or name of location to create server in."
                              },
                              "attributes": {
                                "typeAttributes": [
                                  "optional"
                                ]
                              },
                              "content": {
                                "key": {
                                  "element": "string",
                                  "content": "location"
                                },
                                "value": {
                                  "element": "string",
                                  "content": "nbg1"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "element": "option",
                          "content": [
                            {
                              "element": "member",
                              "meta": {
                                "description": "ID or name of datacenter to create server in."
                              },
                              "attributes": {
                                "typeAttributes": [
                                  "optional"
                                ]
                              },
                              "content": {
                                "key": {
                                  "element": "string",
                                  "content": "datacenter"
                                },
                                "value": {
                                  "element": "string",
                                  "content": "nbg1-dc3"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Start Server right after creation. Defaults to true."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "optional"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "start_after_create"
                        },
                        "value": {
                          "element": "boolean",
                          "content": true
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID or name of the image the server is created from"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "image"
                        },
                        "value": {
                          "element": "string",
                          "content": "ubuntu-16.04"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "SSH key IDs or names which should be injected into the server at creation time"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "optional",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "ssh_keys"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "string",
                              "content": "my-ssh-key"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Volume IDs which should be attached to the server at the creation time. Volumes must be in the same location."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "optional"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "volumes"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 1
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Cloud-Init user data to use during server creation. This field is limited to 32KiB."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "optional"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "user_data"
                        },
                        "value": {
                          "element": "string",
                          "content": "#cloud-config\\nruncmd:\\n- [touch, /root/cloud-init-worked]\\n"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "User-defined labels (key-value pairs)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "optional"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "labels"
                        },
                        "value": {
                          "element": "object"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Auto mount volumes after attach."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "optional"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "automount"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "Server"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of server"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 42
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Name of the server (must be unique per project and a valid hostname as per RFC 1123)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "my-server"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Status of the server"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "status"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "running"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "running"
                            },
                            {
                              "element": "string",
                              "content": "initializing"
                            },
                            {
                              "element": "string",
                              "content": "starting"
                            },
                            {
                              "element": "string",
                              "content": "stopping"
                            },
                            {
                              "element": "string",
                              "content": "off"
                            },
                            {
                              "element": "string",
                              "content": "deleting"
                            },
                            {
                              "element": "string",
                              "content": "migrating"
                            },
                            {
                              "element": "string",
                              "content": "rebuilding"
                            },
                            {
                              "element": "string",
                              "content": "unknown"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Point in time when the server was created (in ISO-8601 format)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "created"
                        },
                        "value": {
                          "element": "string",
                          "content": "2016-01-30T23:50+00:00"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Public network information. The servers ipv4 address can be found in `public_net->ipv4->ip`"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "public_net"
                        },
                        "value": {
                          "element": "Public Network"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Type of server - determines how much ram, disk and cpu a server has"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "server_type"
                        },
                        "value": {
                          "element": "ServerType"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Datacenter this server is located at"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "datacenter"
                        },
                        "value": {
                          "element": "Datacenter"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Image this server was created from."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "image"
                        },
                        "value": {
                          "element": "Image"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "ISO image that is attached to this server. Null if no ISO is attached."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "iso"
                        },
                        "value": {
                          "element": "ISO"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "True if rescue mode is enabled: Server will then boot into rescue system on next reboot."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "rescue_enabled"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "True if server has been locked and is not available to user."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "locked"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Time window (UTC) in which the backup will run, or null if the backups are not enabled"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "backup_window"
                        },
                        "value": {
                          "element": "string",
                          "content": "22-02"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Outbound Traffic for the current billing period in bytes"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "outgoing_traffic"
                        },
                        "value": {
                          "element": "number",
                          "content": 123456
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Inbound Traffic for the current billing period in bytes"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "ingoing_traffic"
                        },
                        "value": {
                          "element": "number",
                          "content": 123456
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Free Traffic for the current billing period in bytes"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "included_traffic"
                        },
                        "value": {
                          "element": "number",
                          "content": 654321
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Protection configuration for the server"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "protection"
                        },
                        "value": {
                          "element": "ServerProtection"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "User-defined labels (key-value pairs)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "labels"
                        },
                        "value": {
                          "element": "object"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "IDs of Volumes assigned to this server."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "optional"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "volumes"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "number"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ServerType"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the server type"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 1
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Unique identifier of the server type"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "cx11"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Description of the server type"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "description"
                        },
                        "value": {
                          "element": "string",
                          "content": "CX11"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Number of cpu cores a server of this type will have"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "cores"
                        },
                        "value": {
                          "element": "number",
                          "content": 1
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Memory a server of this type will have in GB"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "memory"
                        },
                        "value": {
                          "element": "number",
                          "content": 1
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Disk size a server of this type will have in GB"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "disk"
                        },
                        "value": {
                          "element": "number",
                          "content": 25
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "True if server type is deprecated"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "deprecated"
                        },
                        "value": {
                          "element": "boolean",
                          "content": true
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Prices in different Locations"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "prices"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "ServerTypeLocationPrice"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Type of server boot drive. Local has higher speed. Network has better availability."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "storage_type"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "local"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "local"
                            },
                            {
                              "element": "string",
                              "content": "network"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Type of cpu."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "cpu_type"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "shared"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "shared"
                            },
                            {
                              "element": "string",
                              "content": "dedicated"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "Location"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the location"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 1
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Unique identifier of the location"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "fsn1"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Description of the location"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "description"
                        },
                        "value": {
                          "element": "string",
                          "content": "Falkenstein DC Park 1"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "ISO 3166-1 alpha-2 code of the country the location resides in"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "country"
                        },
                        "value": {
                          "element": "string",
                          "content": "DE"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "City the location is closest to"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "city"
                        },
                        "value": {
                          "element": "string",
                          "content": "Falkenstein"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Latitude of the city closest to the location"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "latitude"
                        },
                        "value": {
                          "element": "number",
                          "content": 50.47612
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Longitude of the city closest to the location"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "longitude"
                        },
                        "value": {
                          "element": "number",
                          "content": 12.370071
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "Datacenter"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the datacenter"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 1
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Unique identifier of the datacenter"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "fsn1-dc8"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Description of the datacenter"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "description"
                        },
                        "value": {
                          "element": "string",
                          "content": "Falkenstein 1 DC 8"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Location where the datacenter resides in"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "location"
                        },
                        "value": {
                          "element": "Location"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The server types the datacenter can handle"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "server_types"
                        },
                        "value": {
                          "element": "DatacenterServerTypes"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "DatacenterServerTypes"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "IDs of server types that are supported in the datacenter"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "supported"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 1
                            },
                            {
                              "element": "number",
                              "content": 2
                            },
                            {
                              "element": "number",
                              "content": 3
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "IDs of server types that are supported and for which the datacenter has enough resources left"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "available"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 1
                            },
                            {
                              "element": "number",
                              "content": 2
                            },
                            {
                              "element": "number",
                              "content": 3
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "IDs of server types that are supported and for which the datacenter has enough resources left"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "available_for_migration"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 1
                            },
                            {
                              "element": "number",
                              "content": 2
                            },
                            {
                              "element": "number",
                              "content": 3
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "Image"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the image"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 4711
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Type of the image"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "type"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "snapshot"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "system"
                            },
                            {
                              "element": "string",
                              "content": "snapshot"
                            },
                            {
                              "element": "string",
                              "content": "backup"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Whether the image can be used or if it's still being created"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "status"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "available"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "available"
                            },
                            {
                              "element": "string",
                              "content": "creating"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Unique identifier of the image. This value is only set for system images."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "ubuntu-16.04"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Description of the image"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "description"
                        },
                        "value": {
                          "element": "string",
                          "content": "Ubuntu 16.04 Standard 64 bit"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Size of the image file in our storage in GB. For snapshot images this is the value relevant for calculating costs for the image."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "image_size"
                        },
                        "value": {
                          "element": "number",
                          "content": 2.3
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Size of the disk contained in the image in GB."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "disk_size"
                        },
                        "value": {
                          "element": "number",
                          "content": 10
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Point in time when the image was created (in ISO-8601 format)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "created"
                        },
                        "value": {
                          "element": "string",
                          "content": "2016-01-30T23:50+00:00"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Information about the server the image was created from"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "created_from"
                        },
                        "value": {
                          "element": "ImageCreator"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of server the image is bound to. Only set for images of type `backup`."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "bound_to"
                        },
                        "value": {
                          "element": "number"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Flavor of operating system contained in the image"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "os_flavor"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "ubuntu"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "ubuntu"
                            },
                            {
                              "element": "string",
                              "content": "centos"
                            },
                            {
                              "element": "string",
                              "content": "debian"
                            },
                            {
                              "element": "string",
                              "content": "fedora"
                            },
                            {
                              "element": "string",
                              "content": "unknown"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Operating system version"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "os_version"
                        },
                        "value": {
                          "element": "string",
                          "content": "16.04"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Indicates that rapid deploy of the image is available"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "rapid_deploy"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Protection configuration for the image"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "protection"
                        },
                        "value": {
                          "element": "ImageProtection"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Point in time when the image is considered to be deprecated (in ISO-8601 format)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "deprecated"
                        },
                        "value": {
                          "element": "string",
                          "content": "2018-02-28T00:00:00+00:00"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "User-defined labels (key-value pairs)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "labels"
                        },
                        "value": {
                          "element": "object"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "Image",
                  "meta": {
                    "id": "Snapshot Image"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Unique identifier of the image. This value is only set for system images."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Type of the image"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "type"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "snapshot"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "snapshot"
                            },
                            {
                              "element": "string",
                              "content": "system"
                            },
                            {
                              "element": "string",
                              "content": "backup"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ImageCreator"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the server the image was created from"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 1
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Server name at the time the image was created"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "Server"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "Action"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the action"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 13
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Command executed in the action"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "command"
                        },
                        "value": {
                          "element": "string",
                          "content": "start_server"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Status of the action"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "status"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "success"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "success"
                            },
                            {
                              "element": "string",
                              "content": "running"
                            },
                            {
                              "element": "string",
                              "content": "error"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Progress of action in percent"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "progress"
                        },
                        "value": {
                          "element": "number",
                          "content": 100
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Point in time when the action was started (in ISO-8601 format)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "started"
                        },
                        "value": {
                          "element": "string",
                          "content": "2016-01-30T23:55:00+00:00"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "finished"
                        },
                        "value": {
                          "element": "string",
                          "content": "2016-01-30T23:56:00+00:00"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Resources the action relates to"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "resources"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "ResourceRef"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Error message for the action if error occured, otherwise null."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "error"
                        },
                        "value": {
                          "element": "ActionErrorRef"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "Action",
                  "meta": {
                    "id": "ActionRunning"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Status of the action"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "status"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "running"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "running"
                            },
                            {
                              "element": "string",
                              "content": "success"
                            },
                            {
                              "element": "string",
                              "content": "error"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Progress of action in percent"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "progress"
                        },
                        "value": {
                          "element": "number",
                          "content": 0
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Point in time when the action was started (in ISO-8601 format)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "started"
                        },
                        "value": {
                          "element": "string",
                          "content": "2016-01-30T23:50+00:00"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Point in time when the action was finished (in ISO-8601 format). Only set if the action is finished otherwise null."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "finished"
                        },
                        "value": {
                          "element": "string"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Resources the action relates to"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "resources"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "ResourceRef"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Error message for the action if error occured, otherwise null."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "error"
                        },
                        "value": {
                          "element": "ActionErrorRef"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ActionErrorRef"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Fixed machine readable code"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "code"
                        },
                        "value": {
                          "element": "string",
                          "content": "action_failed"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Humanized error message."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "message"
                        },
                        "value": {
                          "element": "string",
                          "content": "Action failed"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ResourceRef"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of resource referenced"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 42
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Type of resource referenced"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "type"
                        },
                        "value": {
                          "element": "string",
                          "content": "server"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ResourceRefImage"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of resource referenced"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 4711
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Type of resource referenced"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "type"
                        },
                        "value": {
                          "element": "string",
                          "content": "image"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ResourceRefFloatingIP"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of resource referenced"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 4711
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Type of resource referenced"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "type"
                        },
                        "value": {
                          "element": "string",
                          "content": "floating_ip"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ResourceRefVolume"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of resource referenced"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 13
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Type of resource referenced"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "type"
                        },
                        "value": {
                          "element": "string",
                          "content": "volume"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ErrorRef"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Fixed machine readable code"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "code"
                        },
                        "value": {
                          "element": "string",
                          "content": "server_create_failed"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Humanized error message."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "message"
                        },
                        "value": {
                          "element": "string",
                          "content": "Creating the server failed"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "FloatingIP"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the Floating IP"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 4711
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Description of the Floating IP"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "description"
                        },
                        "value": {
                          "element": "string",
                          "content": "Web Frontend"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "IP address of the Floating IP"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "ip"
                        },
                        "value": {
                          "element": "string",
                          "content": "131.232.99.1"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Type of the Floating IP"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "type"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "ipv4"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "ipv4"
                            },
                            {
                              "element": "string",
                              "content": "ipv6"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Id of the Server the Floating IP is assigned to, null if it is not assigned at all."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "server"
                        },
                        "value": {
                          "element": "number",
                          "content": 42
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Array of reverse DNS entries"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "dns_ptr"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "FloatingIPrDNS"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Location the Floating IP was created in. Routing is optimized for this location."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "home_location"
                        },
                        "value": {
                          "element": "Location"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Whether the IP is blocked"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "blocked"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Protection configuration for the Floating IP"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "protection"
                        },
                        "value": {
                          "element": "FloatingIPProtection"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "User-defined labels (key-value pairs)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "labels"
                        },
                        "value": {
                          "element": "object"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "FloatingIPrDNS"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Single IPv4 or IPv6 address"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "ip"
                        },
                        "value": {
                          "element": "string",
                          "content": "2001:db8::1"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "DNS pointer for the specific IP address"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "dns_ptr"
                        },
                        "value": {
                          "element": "string",
                          "content": "server.example.com"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ISO"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the ISO"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 4711
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Unique identifier of the ISO. Only set for public ISOs"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "FreeBSD-11.0-RELEASE-amd64-dvd1"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Description of the ISO"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "description"
                        },
                        "value": {
                          "element": "string",
                          "content": "FreeBSD 11.0 x64"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Type of the ISO"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "type"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "public"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "public"
                            },
                            {
                              "element": "string",
                              "content": "private"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to servers."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "deprecated"
                        },
                        "value": {
                          "element": "string",
                          "content": "2018-02-28T00:00:00+00:00"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "Metrics Generic"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Start of period of metrics reported (in ISO-8601 format)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "start"
                        },
                        "value": {
                          "element": "string",
                          "content": "2017-01-01T00:00:00+00:00"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "End of period of metrics reported (in ISO-8601 format)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "end"
                        },
                        "value": {
                          "element": "string",
                          "content": "2017-01-01T23:00:00+00:00"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Resolution of results in seconds."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "step"
                        },
                        "value": {
                          "element": "number",
                          "content": 60
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Hash with timeseries information, containing the name of timeseries as key"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "time_series"
                        },
                        "value": {
                          "element": "object",
                          "content": [
                            {
                              "element": "member",
                              "attributes": {
                                "typeAttributes": [
                                  "required"
                                ]
                              },
                              "content": {
                                "key": {
                                  "element": "string",
                                  "attributes": {
                                    "variable": true
                                  },
                                  "content": "name_of_timeseries"
                                },
                                "value": {
                                  "element": "Metrics Values"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "Metrics Values"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Metrics Timestamps with values"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "values"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "array",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "1435781470.622"
                                },
                                {
                                  "element": "string",
                                  "content": "42"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "IPv4"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "IP address (v4) of this server."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "ip"
                        },
                        "value": {
                          "element": "string",
                          "content": "1.2.3.4"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "If the IP is blocked by our anti abuse dept"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "blocked"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Reverse DNS PTR entry for the IPv4 addresses of this server."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "dns_ptr"
                        },
                        "value": {
                          "element": "string",
                          "content": "server01.example.com"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "IPv6"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "IP address (v4) of this server."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "ip"
                        },
                        "value": {
                          "element": "string",
                          "content": "2001:db8::/64"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "If the IP is blocked by our anti abuse dept"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "blocked"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Reverse DNS PTR entries for the IPv6 addresses of this server, `null` by default."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "dns_ptr"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "IPv6rDNS"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "IPv6rDNS"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Single IPv6 address of this server for which the reverse DNS entry has been set up."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "ip"
                        },
                        "value": {
                          "element": "string",
                          "content": "2001:db8::1"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "DNS pointer for the specific IP address."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "dns_ptr"
                        },
                        "value": {
                          "element": "string",
                          "content": "server.example.com"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "Public Network"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "IP address (v4) and its reverse dns entry of this server."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "ipv4"
                        },
                        "value": {
                          "element": "IPv4"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "IPv6 network assigned to this server and its reverse dns entry."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "ipv6"
                        },
                        "value": {
                          "element": "IPv6"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "IDs of floating IPs assigned to this server."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "floating_ips"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 478
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "NetGrossPrice"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Price without VAT"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "net"
                        },
                        "value": {
                          "element": "string",
                          "content": "1.0000000000"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Price with VAT added"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "gross"
                        },
                        "value": {
                          "element": "string",
                          "content": "1.1900000000000000"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ImagePrice"
                  },
                  "content": [
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "price_per_gb_month"
                        },
                        "value": {
                          "element": "NetGrossPrice"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "FloatingIPPrice"
                  },
                  "content": [
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "price_monthly"
                        },
                        "value": {
                          "element": "NetGrossPrice"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "TrafficPrice"
                  },
                  "content": [
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "price_per_tb"
                        },
                        "value": {
                          "element": "NetGrossPrice"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "BackupPrice"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Percentage by how much the base price will increase"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "percentage"
                        },
                        "value": {
                          "element": "string",
                          "content": "20.0000000000"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ServerTypeLocationPrice"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Name of the location the price is for"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "location"
                        },
                        "value": {
                          "element": "string",
                          "content": "fsn1"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Hourly costs for a server type in this location"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "price_hourly"
                        },
                        "value": {
                          "element": "NetGrossPrice"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Monthly costs for a server type in this location"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "price_monthly"
                        },
                        "value": {
                          "element": "NetGrossPrice"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ServerTypesPricing"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the server type the price is for"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 4
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Name of the server type the price is for"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "CX11"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Server type costs per location"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "prices"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "ServerTypeLocationPrice"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "VolumePrice"
                  },
                  "content": [
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "price_per_gb_month"
                        },
                        "value": {
                          "element": "NetGrossPrice"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "Price"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Currency the returned prices are expressed in, coded according to ISO 4217."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "currency"
                        },
                        "value": {
                          "element": "string",
                          "content": "EUR"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The VAT rate used for calculating prices with VAT."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "vat_rate"
                        },
                        "value": {
                          "element": "string",
                          "content": "19.000000"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The cost of Image per GB/month."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "image"
                        },
                        "value": {
                          "element": "ImagePrice"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The cost of one floating IP per month."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "floating_ip"
                        },
                        "value": {
                          "element": "FloatingIPPrice"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The cost of additional traffic per TB."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "traffic"
                        },
                        "value": {
                          "element": "TrafficPrice"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Will increase base server costs by specific percentage."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "server_backup"
                        },
                        "value": {
                          "element": "BackupPrice"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The cost of Volume per GB/month."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "volume"
                        },
                        "value": {
                          "element": "VolumePrice"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Costs of server types per location and type."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "fixedType"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "server_types"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "ServerTypesPricing"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ServerProtection"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "If true, prevents the server from being deleted"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "delete"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "If true, prevents the server from being rebuilt"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "rebuild"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "FloatingIPProtection"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "If true, prevents the Floating IP from being deleted"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "delete"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "ImageProtection"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "If true, prevents the snapshot from being deleted"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "delete"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "VolumeProtection"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "If true, prevents the Volume from being deleted"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "delete"
                        },
                        "value": {
                          "element": "boolean",
                          "content": false
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "object",
                  "meta": {
                    "id": "Volume"
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the Volume"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "number",
                          "content": 4711
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Point in time when the Volume was created (in ISO-8601 format)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "created"
                        },
                        "value": {
                          "element": "string",
                          "content": "2016-01-30T23:50:11+00:00"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Name of the Volume"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "database-storage"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the Server the Volume is attached to, null if it is not attached at all."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "server"
                        },
                        "value": {
                          "element": "number",
                          "content": 12
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Location of the Volume. Volume can only be attached to Servers in the same location."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "location"
                        },
                        "value": {
                          "element": "Location"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Size in GB of the Volume"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "size"
                        },
                        "value": {
                          "element": "number",
                          "content": 42
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Device path on the file system for the Volume"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "linux_device"
                        },
                        "value": {
                          "element": "string",
                          "content": "/dev/disk/by-id/scsi-0HC_Volume_4711"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Protection configuration for the Volume"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "protection"
                        },
                        "value": {
                          "element": "VolumeProtection"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "User-defined labels (key-value pairs)"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "labels"
                        },
                        "value": {
                          "element": "object"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Current status of the volume"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "status"
                        },
                        "value": {
                          "element": "enum",
                          "attributes": {
                            "samples": [
                              [
                                {
                                  "element": "string",
                                  "content": "available"
                                }
                              ]
                            ]
                          },
                          "content": [
                            {
                              "element": "string",
                              "content": "creating"
                            },
                            {
                              "element": "string",
                              "content": "available"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Filesystem of the volume if formatted on creation, null if not formatted on creation."
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required",
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "format"
                        },
                        "value": {
                          "element": "string",
                          "content": "xfs"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}

